{
  "resolvedId": "/home/yalnguembu/Perso/quonte/node_modules/@vueuse/motion/dist/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import defu from 'defu';\nimport { ref, unref, watch, computed, reactive, defineComponent, useSlots, h, resolveComponent, onUpdated, isRef } from 'vue';\nimport { isObject, useEventListener, useIntersectionObserver, unrefElement, useMediaQuery } from '@vueuse/core';\nimport { tryOnUnmounted } from '@vueuse/shared';\nimport sync, { getFrameData } from 'framesync';\nimport { velocityPerSecond, inertia, animate, cubicBezier, linear, easeIn, easeInOut, easeOut, circIn, circInOut, circOut, backIn, backInOut, backOut, anticipate, bounceIn, bounceInOut, bounceOut } from 'popmotion';\nimport { number, color, px, degrees, scale, alpha, progressPercentage, filter, complex } from 'style-value-types';\nimport { isHTMLTag } from '@vue/shared';\n\nconst motionState = {};\n\nvar __defProp$1 = Object.defineProperty;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$1 = (obj, key, value) => {\n  __defNormalProp$1(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass SubscriptionManager {\n  constructor() {\n    __publicField$1(this, \"subscriptions\", /* @__PURE__ */ new Set());\n  }\n  add(handler) {\n    this.subscriptions.add(handler);\n    return () => this.subscriptions.delete(handler);\n  }\n  notify(a, b, c) {\n    if (!this.subscriptions.size)\n      return;\n    for (const handler of this.subscriptions)\n      handler(a, b, c);\n  }\n  clear() {\n    this.subscriptions.clear();\n  }\n}\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nfunction isFloat(value) {\n  return !isNaN(parseFloat(value));\n}\nclass MotionValue {\n  /**\n   * @param init - The initiating value\n   * @param config - Optional configuration options\n   */\n  constructor(init) {\n    /**\n     * The current state of the `MotionValue`.\n     */\n    __publicField(this, \"current\");\n    /**\n     * The previous state of the `MotionValue`.\n     */\n    __publicField(this, \"prev\");\n    /**\n     * Duration, in milliseconds, since last updating frame.\n     */\n    __publicField(this, \"timeDelta\", 0);\n    /**\n     * Timestamp of the last time this `MotionValue` was updated.\n     */\n    __publicField(this, \"lastUpdated\", 0);\n    /**\n     * Functions to notify when the `MotionValue` updates.\n     */\n    __publicField(this, \"updateSubscribers\", new SubscriptionManager());\n    /**\n     * A reference to the currently-controlling Popmotion animation\n     */\n    __publicField(this, \"stopAnimation\");\n    /**\n     * Tracks whether this value can output a velocity.\n     */\n    __publicField(this, \"canTrackVelocity\", false);\n    /**\n     * Update and notify `MotionValue` subscribers.\n     *\n     * @param v\n     * @param render\n     */\n    __publicField(this, \"updateAndNotify\", (v) => {\n      this.prev = this.current;\n      this.current = v;\n      const { delta, timestamp } = getFrameData();\n      if (this.lastUpdated !== timestamp) {\n        this.timeDelta = delta;\n        this.lastUpdated = timestamp;\n      }\n      sync.postRender(this.scheduleVelocityCheck);\n      this.updateSubscribers.notify(this.current);\n    });\n    /**\n     * Schedule a velocity check for the next frame.\n     */\n    __publicField(this, \"scheduleVelocityCheck\", () => sync.postRender(this.velocityCheck));\n    /**\n     * Updates `prev` with `current` if the value hasn't been updated this frame.\n     * This ensures velocity calculations return `0`.\n     */\n    __publicField(this, \"velocityCheck\", ({ timestamp }) => {\n      if (!this.canTrackVelocity)\n        this.canTrackVelocity = isFloat(this.current);\n      if (timestamp !== this.lastUpdated)\n        this.prev = this.current;\n    });\n    this.prev = this.current = init;\n    this.canTrackVelocity = isFloat(this.current);\n  }\n  /**\n   * Adds a function that will be notified when the `MotionValue` is updated.\n   *\n   * It returns a function that, when called, will cancel the subscription.\n   */\n  onChange(subscription) {\n    return this.updateSubscribers.add(subscription);\n  }\n  clearListeners() {\n    this.updateSubscribers.clear();\n  }\n  /**\n   * Sets the state of the `MotionValue`.\n   *\n   * @param v\n   * @param render\n   */\n  set(v) {\n    this.updateAndNotify(v);\n  }\n  /**\n   * Returns the latest state of `MotionValue`\n   *\n   * @returns - The latest state of `MotionValue`\n   */\n  get() {\n    return this.current;\n  }\n  /**\n   * Get previous value.\n   *\n   * @returns - The previous latest state of `MotionValue`\n   */\n  getPrevious() {\n    return this.prev;\n  }\n  /**\n   * Returns the latest velocity of `MotionValue`\n   *\n   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n   */\n  getVelocity() {\n    return this.canTrackVelocity ? velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;\n  }\n  /**\n   * Registers a new animation to control this `MotionValue`. Only one\n   * animation can drive a `MotionValue` at one time.\n   */\n  start(animation) {\n    this.stop();\n    return new Promise((resolve) => {\n      const { stop } = animation(resolve);\n      this.stopAnimation = stop;\n    }).then(() => this.clearAnimation());\n  }\n  /**\n   * Stop the currently active animation.\n   */\n  stop() {\n    if (this.stopAnimation)\n      this.stopAnimation();\n    this.clearAnimation();\n  }\n  /**\n   * Returns `true` if this value is currently animating.\n   */\n  isAnimating() {\n    return !!this.stopAnimation;\n  }\n  /**\n   * Clear the current animation reference.\n   */\n  clearAnimation() {\n    this.stopAnimation = null;\n  }\n  /**\n   * Destroy and clean up subscribers to this `MotionValue`.\n   */\n  destroy() {\n    this.updateSubscribers.clear();\n    this.stop();\n  }\n}\nfunction getMotionValue(init) {\n  return new MotionValue(init);\n}\n\nconst { isArray } = Array;\nfunction useMotionValues() {\n  const motionValues = ref({});\n  const stop = (keys) => {\n    const destroyKey = (key) => {\n      if (!motionValues.value[key])\n        return;\n      motionValues.value[key].stop();\n      motionValues.value[key].destroy();\n      delete motionValues.value[key];\n    };\n    if (keys) {\n      if (isArray(keys)) {\n        keys.forEach(destroyKey);\n      } else {\n        destroyKey(keys);\n      }\n    } else {\n      Object.keys(motionValues.value).forEach(destroyKey);\n    }\n  };\n  const get = (key, from, target) => {\n    if (motionValues.value[key])\n      return motionValues.value[key];\n    const motionValue = getMotionValue(from);\n    motionValue.onChange((v) => target[key] = v);\n    motionValues.value[key] = motionValue;\n    return motionValue;\n  };\n  tryOnUnmounted(stop);\n  return {\n    motionValues,\n    get,\n    stop\n  };\n}\n\nfunction isKeyframesTarget(v) {\n  return Array.isArray(v);\n}\nfunction underDampedSpring() {\n  return {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restDelta: 0.5,\n    restSpeed: 10\n  };\n}\nfunction criticallyDampedSpring(to) {\n  return {\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restDelta: 0.01,\n    restSpeed: 10\n  };\n}\nfunction overDampedSpring(to) {\n  return {\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 100 : 30,\n    restDelta: 0.01,\n    restSpeed: 10\n  };\n}\nfunction linearTween() {\n  return {\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 300\n  };\n}\nfunction keyframes(values) {\n  return {\n    type: \"keyframes\",\n    duration: 800,\n    values\n  };\n}\nconst defaultTransitions = {\n  default: overDampedSpring,\n  x: underDampedSpring,\n  y: underDampedSpring,\n  z: underDampedSpring,\n  rotate: underDampedSpring,\n  rotateX: underDampedSpring,\n  rotateY: underDampedSpring,\n  rotateZ: underDampedSpring,\n  scaleX: criticallyDampedSpring,\n  scaleY: criticallyDampedSpring,\n  scale: criticallyDampedSpring,\n  backgroundColor: linearTween,\n  color: linearTween,\n  opacity: linearTween\n};\nfunction getDefaultTransition(valueKey, to) {\n  let transitionFactory;\n  if (isKeyframesTarget(to)) {\n    transitionFactory = keyframes;\n  } else {\n    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;\n  }\n  return { to, ...transitionFactory(to) };\n}\n\nconst int = {\n  ...number,\n  transform: Math.round\n};\nconst valueTypes = {\n  // Color props\n  color,\n  backgroundColor: color,\n  outlineColor: color,\n  fill: color,\n  stroke: color,\n  // Border props\n  borderColor: color,\n  borderTopColor: color,\n  borderRightColor: color,\n  borderBottomColor: color,\n  borderLeftColor: color,\n  borderWidth: px,\n  borderTopWidth: px,\n  borderRightWidth: px,\n  borderBottomWidth: px,\n  borderLeftWidth: px,\n  borderRadius: px,\n  radius: px,\n  borderTopLeftRadius: px,\n  borderTopRightRadius: px,\n  borderBottomRightRadius: px,\n  borderBottomLeftRadius: px,\n  // Positioning props\n  width: px,\n  maxWidth: px,\n  height: px,\n  maxHeight: px,\n  size: px,\n  top: px,\n  right: px,\n  bottom: px,\n  left: px,\n  // Spacing props\n  padding: px,\n  paddingTop: px,\n  paddingRight: px,\n  paddingBottom: px,\n  paddingLeft: px,\n  margin: px,\n  marginTop: px,\n  marginRight: px,\n  marginBottom: px,\n  marginLeft: px,\n  // Transform props\n  rotate: degrees,\n  rotateX: degrees,\n  rotateY: degrees,\n  rotateZ: degrees,\n  scale,\n  scaleX: scale,\n  scaleY: scale,\n  scaleZ: scale,\n  skew: degrees,\n  skewX: degrees,\n  skewY: degrees,\n  distance: px,\n  translateX: px,\n  translateY: px,\n  translateZ: px,\n  x: px,\n  y: px,\n  z: px,\n  perspective: px,\n  transformPerspective: px,\n  opacity: alpha,\n  originX: progressPercentage,\n  originY: progressPercentage,\n  originZ: px,\n  // Misc\n  zIndex: int,\n  filter,\n  WebkitFilter: filter,\n  // SVG\n  fillOpacity: alpha,\n  strokeOpacity: alpha,\n  numOctaves: int\n};\nconst getValueType = (key) => valueTypes[key];\nfunction getValueAsType(value, type) {\n  return type && typeof value === \"number\" && type.transform ? type.transform(value) : value;\n}\nfunction getAnimatableNone(key, value) {\n  let defaultValueType = getValueType(key);\n  if (defaultValueType !== filter)\n    defaultValueType = complex;\n  return defaultValueType.getAnimatableNone ? defaultValueType.getAnimatableNone(value) : void 0;\n}\n\nconst easingLookup = {\n  linear,\n  easeIn,\n  easeInOut,\n  easeOut,\n  circIn,\n  circInOut,\n  circOut,\n  backIn,\n  backInOut,\n  backOut,\n  anticipate,\n  bounceIn,\n  bounceInOut,\n  bounceOut\n};\nfunction easingDefinitionToFunction(definition) {\n  if (Array.isArray(definition)) {\n    const [x1, y1, x2, y2] = definition;\n    return cubicBezier(x1, y1, x2, y2);\n  } else if (typeof definition === \"string\") {\n    return easingLookup[definition];\n  }\n  return definition;\n}\nfunction isEasingArray(ease) {\n  return Array.isArray(ease) && typeof ease[0] !== \"number\";\n}\nfunction isAnimatable(key, value) {\n  if (key === \"zIndex\")\n    return false;\n  if (typeof value === \"number\" || Array.isArray(value))\n    return true;\n  if (typeof value === \"string\" && // It's animatable if we have a string\n  complex.test(value) && // And it contains numbers and/or colors\n  !value.startsWith(\"url(\"))\n    return true;\n  return false;\n}\nfunction hydrateKeyframes(options) {\n  if (Array.isArray(options.to) && options.to[0] === null) {\n    options.to = [...options.to];\n    options.to[0] = options.from;\n  }\n  return options;\n}\nfunction convertTransitionToAnimationOptions({ ease, times, delay, ...transition }) {\n  const options = { ...transition };\n  if (times)\n    options.offset = times;\n  if (ease) {\n    options.ease = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);\n  }\n  if (delay)\n    options.elapsed = -delay;\n  return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n  if (Array.isArray(options.to)) {\n    if (!transition.duration)\n      transition.duration = 800;\n  }\n  hydrateKeyframes(options);\n  if (!isTransitionDefined(transition)) {\n    transition = {\n      ...transition,\n      ...getDefaultTransition(key, options.to)\n    };\n  }\n  return {\n    ...options,\n    ...convertTransitionToAnimationOptions(transition)\n  };\n}\nfunction isTransitionDefined({ delay, repeat, repeatType, repeatDelay, from, ...transition }) {\n  return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n  return transition[key] || transition.default || transition;\n}\nfunction getAnimation(key, value, target, transition, onComplete) {\n  const valueTransition = getValueTransition(transition, key);\n  let origin = valueTransition.from === null || valueTransition.from === void 0 ? value.get() : valueTransition.from;\n  const isTargetAnimatable = isAnimatable(key, target);\n  if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\")\n    origin = getAnimatableNone(key, target);\n  const isOriginAnimatable = isAnimatable(key, origin);\n  function start(complete) {\n    const options = {\n      from: origin,\n      to: target,\n      velocity: transition.velocity ? transition.velocity : value.getVelocity(),\n      onUpdate: (v) => value.set(v)\n    };\n    return valueTransition.type === \"inertia\" || valueTransition.type === \"decay\" ? inertia({ ...options, ...valueTransition }) : animate({\n      ...getPopmotionAnimationOptions(valueTransition, options, key),\n      onUpdate: (v) => {\n        options.onUpdate(v);\n        if (valueTransition.onUpdate)\n          valueTransition.onUpdate(v);\n      },\n      onComplete: () => {\n        if (transition.onComplete)\n          transition.onComplete();\n        if (onComplete)\n          onComplete();\n        if (complete)\n          complete();\n      }\n    });\n  }\n  function set(complete) {\n    value.set(target);\n    if (transition.onComplete)\n      transition.onComplete();\n    if (onComplete)\n      onComplete();\n    if (complete)\n      complete();\n    return { stop: () => {\n    } };\n  }\n  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set : start;\n}\n\nfunction useMotionTransitions() {\n  const { motionValues, stop, get } = useMotionValues();\n  const push = (key, value, target, transition = {}, onComplete) => {\n    const from = target[key];\n    const motionValue = get(key, from, target);\n    if (transition && transition.immediate) {\n      motionValue.set(value);\n      return;\n    }\n    const animation = getAnimation(key, motionValue, value, transition, onComplete);\n    motionValue.start(animation);\n  };\n  return { motionValues, stop, push };\n}\n\nfunction useMotionControls(motionProperties, variants = {}, { motionValues, push, stop } = useMotionTransitions()) {\n  const _variants = unref(variants);\n  const isAnimating = ref(false);\n  watch(\n    motionValues,\n    (newVal) => {\n      isAnimating.value = Object.values(newVal).filter((value) => value.isAnimating()).length > 0;\n    },\n    {\n      immediate: true,\n      deep: true\n    }\n  );\n  const getVariantFromKey = (variant) => {\n    if (!_variants || !_variants[variant])\n      throw new Error(`The variant ${variant} does not exist.`);\n    return _variants[variant];\n  };\n  const apply = (variant) => {\n    if (typeof variant === \"string\")\n      variant = getVariantFromKey(variant);\n    return Promise.all(\n      Object.entries(variant).map(([key, value]) => {\n        if (key === \"transition\")\n          return void 0;\n        return new Promise(\n          (resolve) => (\n            // @ts-expect-error - Fix errors later for typescript 5\n            push(key, value, motionProperties, variant.transition || getDefaultTransition(key, variant[key]), resolve)\n          )\n        );\n      }).filter(Boolean)\n    );\n  };\n  const set = (variant) => {\n    const variantData = isObject(variant) ? variant : getVariantFromKey(variant);\n    Object.entries(variantData).forEach(([key, value]) => {\n      if (key === \"transition\")\n        return;\n      push(key, value, motionProperties, {\n        immediate: true\n      });\n    });\n  };\n  const leave = async (done) => {\n    let leaveVariant;\n    if (_variants) {\n      if (_variants.leave)\n        leaveVariant = _variants.leave;\n      if (!_variants.leave && _variants.initial)\n        leaveVariant = _variants.initial;\n    }\n    if (!leaveVariant) {\n      done();\n      return;\n    }\n    await apply(leaveVariant);\n    done();\n  };\n  return {\n    isAnimating,\n    apply,\n    set,\n    leave,\n    stop\n  };\n}\n\nconst isBrowser = typeof window !== \"undefined\";\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nfunction registerEventListeners({ target, state, variants, apply }) {\n  const _variants = unref(variants);\n  const hovered = ref(false);\n  const tapped = ref(false);\n  const focused = ref(false);\n  const mutableKeys = computed(() => {\n    let result = [];\n    if (!_variants)\n      return result;\n    if (_variants.hovered)\n      result = [...result, ...Object.keys(_variants.hovered)];\n    if (_variants.tapped)\n      result = [...result, ...Object.keys(_variants.tapped)];\n    if (_variants.focused)\n      result = [...result, ...Object.keys(_variants.focused)];\n    return result;\n  });\n  const computedProperties = computed(() => {\n    const result = {};\n    Object.assign(result, state.value);\n    if (hovered.value && _variants.hovered)\n      Object.assign(result, _variants.hovered);\n    if (tapped.value && _variants.tapped)\n      Object.assign(result, _variants.tapped);\n    if (focused.value && _variants.focused)\n      Object.assign(result, _variants.focused);\n    for (const key in result) {\n      if (!mutableKeys.value.includes(key))\n        delete result[key];\n    }\n    return result;\n  });\n  if (_variants.hovered) {\n    useEventListener(target, \"mouseenter\", () => hovered.value = true);\n    useEventListener(target, \"mouseleave\", () => {\n      hovered.value = false;\n      tapped.value = false;\n    });\n    useEventListener(target, \"mouseout\", () => {\n      hovered.value = false;\n      tapped.value = false;\n    });\n  }\n  if (_variants.tapped) {\n    if (supportsMouseEvents()) {\n      useEventListener(target, \"mousedown\", () => tapped.value = true);\n      useEventListener(target, \"mouseup\", () => tapped.value = false);\n    }\n    if (supportsPointerEvents()) {\n      useEventListener(target, \"pointerdown\", () => tapped.value = true);\n      useEventListener(target, \"pointerup\", () => tapped.value = false);\n    }\n    if (supportsTouchEvents()) {\n      useEventListener(target, \"touchstart\", () => tapped.value = true);\n      useEventListener(target, \"touchend\", () => tapped.value = false);\n    }\n  }\n  if (_variants.focused) {\n    useEventListener(target, \"focus\", () => focused.value = true);\n    useEventListener(target, \"blur\", () => focused.value = false);\n  }\n  watch(computedProperties, apply);\n}\n\nfunction registerLifeCycleHooks({ set, target, variants, variant }) {\n  const _variants = unref(variants);\n  watch(\n    () => target,\n    () => {\n      if (!_variants)\n        return;\n      if (_variants.initial)\n        set(\"initial\");\n      if (_variants.enter)\n        variant.value = \"enter\";\n    },\n    {\n      immediate: true,\n      flush: \"pre\"\n    }\n  );\n}\n\nfunction registerVariantsSync({ state, apply }) {\n  watch(\n    state,\n    (newVal) => {\n      if (newVal)\n        apply(newVal);\n    },\n    {\n      immediate: true\n    }\n  );\n}\n\nfunction registerVisibilityHooks({ target, variants, variant }) {\n  const _variants = unref(variants);\n  if (_variants && (_variants.visible || _variants.visibleOnce)) {\n    useIntersectionObserver(target, ([{ isIntersecting }]) => {\n      if (_variants.visible) {\n        if (isIntersecting)\n          variant.value = \"visible\";\n        else\n          variant.value = \"initial\";\n      } else if (_variants.visibleOnce) {\n        if (isIntersecting && variant.value !== \"visibleOnce\")\n          variant.value = \"visibleOnce\";\n        else if (!variant.value)\n          variant.value = \"initial\";\n      }\n    });\n  }\n}\n\nfunction useMotionFeatures(instance, options = {\n  syncVariants: true,\n  lifeCycleHooks: true,\n  visibilityHooks: true,\n  eventListeners: true\n}) {\n  if (options.lifeCycleHooks)\n    registerLifeCycleHooks(instance);\n  if (options.syncVariants)\n    registerVariantsSync(instance);\n  if (options.visibilityHooks)\n    registerVisibilityHooks(instance);\n  if (options.eventListeners)\n    registerEventListeners(instance);\n}\n\nfunction reactiveStyle(props = {}) {\n  const state = reactive({\n    ...props\n  });\n  const style = ref({});\n  watch(\n    state,\n    () => {\n      const result = {};\n      for (const [key, value] of Object.entries(state)) {\n        const valueType = getValueType(key);\n        const valueAsType = getValueAsType(value, valueType);\n        result[key] = valueAsType;\n      }\n      style.value = result;\n    },\n    {\n      immediate: true,\n      deep: true\n    }\n  );\n  return {\n    state,\n    style\n  };\n}\n\nfunction usePermissiveTarget(target, onTarget) {\n  watch(\n    () => unrefElement(target),\n    (el) => {\n      if (!el)\n        return;\n      onTarget(el);\n    },\n    {\n      immediate: true\n    }\n  );\n}\n\nconst translateAlias = {\n  x: \"translateX\",\n  y: \"translateY\",\n  z: \"translateZ\"\n};\nfunction reactiveTransform(props = {}, enableHardwareAcceleration = true) {\n  const state = reactive({ ...props });\n  const transform = ref(\"\");\n  watch(\n    state,\n    (newVal) => {\n      let result = \"\";\n      let hasHardwareAcceleration = false;\n      if (enableHardwareAcceleration && (newVal.x || newVal.y || newVal.z)) {\n        const str = [newVal.x || 0, newVal.y || 0, newVal.z || 0].map(px.transform).join(\",\");\n        result += `translate3d(${str}) `;\n        hasHardwareAcceleration = true;\n      }\n      for (const [key, value] of Object.entries(newVal)) {\n        if (enableHardwareAcceleration && (key === \"x\" || key === \"y\" || key === \"z\"))\n          continue;\n        const valueType = getValueType(key);\n        const valueAsType = getValueAsType(value, valueType);\n        result += `${translateAlias[key] || key}(${valueAsType}) `;\n      }\n      if (enableHardwareAcceleration && !hasHardwareAcceleration)\n        result += \"translateZ(0px) \";\n      transform.value = result.trim();\n    },\n    {\n      immediate: true,\n      deep: true\n    }\n  );\n  return {\n    state,\n    transform\n  };\n}\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst order = [\"perspective\", \"translate\", \"scale\", \"rotate\", \"skew\"];\nconst transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach((operationKey) => {\n  transformAxes.forEach((axesKey) => {\n    const key = operationKey + axesKey;\n    transformProps.push(key);\n  });\n});\nconst transformPropSet = new Set(transformProps);\nfunction isTransformProp(key) {\n  return transformPropSet.has(key);\n}\nconst transformOriginProps = /* @__PURE__ */ new Set([\"originX\", \"originY\", \"originZ\"]);\nfunction isTransformOriginProp(key) {\n  return transformOriginProps.has(key);\n}\nfunction splitValues(variant) {\n  const transform = {};\n  const style = {};\n  Object.entries(variant).forEach(([key, value]) => {\n    if (isTransformProp(key) || isTransformOriginProp(key))\n      transform[key] = value;\n    else\n      style[key] = value;\n  });\n  return { transform, style };\n}\nfunction variantToStyle(variant) {\n  const { transform: _transform, style: _style } = splitValues(variant);\n  const { transform } = reactiveTransform(_transform);\n  const { style } = reactiveStyle(_style);\n  if (transform.value)\n    style.value.transform = transform.value;\n  return style.value;\n}\n\nfunction useElementStyle(target, onInit) {\n  let _cache;\n  let _target;\n  const { state, style } = reactiveStyle();\n  usePermissiveTarget(target, (el) => {\n    _target = el;\n    for (const key of Object.keys(valueTypes)) {\n      if (el.style[key] === null || el.style[key] === \"\" || isTransformProp(key) || isTransformOriginProp(key))\n        continue;\n      state[key] = el.style[key];\n    }\n    if (_cache) {\n      Object.entries(_cache).forEach(([key, value]) => el.style[key] = value);\n    }\n    if (onInit)\n      onInit(state);\n  });\n  watch(\n    style,\n    (newVal) => {\n      if (!_target) {\n        _cache = newVal;\n        return;\n      }\n      for (const key in newVal)\n        _target.style[key] = newVal[key];\n    },\n    {\n      immediate: true\n    }\n  );\n  return {\n    style: state\n  };\n}\n\nfunction parseTransform(transform) {\n  const transforms = transform.trim().split(/\\) |\\)/);\n  if (transforms.length === 1)\n    return {};\n  const parseValues = (value) => {\n    if (value.endsWith(\"px\") || value.endsWith(\"deg\"))\n      return parseFloat(value);\n    if (isNaN(Number(value)))\n      return Number(value);\n    return value;\n  };\n  return transforms.reduce((acc, transform2) => {\n    if (!transform2)\n      return acc;\n    const [name, transformValue] = transform2.split(\"(\");\n    const valueArray = transformValue.split(\",\");\n    const values = valueArray.map((val) => {\n      return parseValues(val.endsWith(\")\") ? val.replace(\")\", \"\") : val.trim());\n    });\n    const value = values.length === 1 ? values[0] : values;\n    return {\n      ...acc,\n      [name]: value\n    };\n  }, {});\n}\nfunction stateFromTransform(state, transform) {\n  Object.entries(parseTransform(transform)).forEach(([key, value]) => {\n    const axes = [\"x\", \"y\", \"z\"];\n    if (key === \"translate3d\") {\n      if (value === 0) {\n        axes.forEach((axis) => state[axis] = 0);\n        return;\n      }\n      value.forEach((axisValue, index) => state[axes[index]] = axisValue);\n      return;\n    }\n    value = parseFloat(value);\n    if (key === \"translateX\") {\n      state.x = value;\n      return;\n    }\n    if (key === \"translateY\") {\n      state.y = value;\n      return;\n    }\n    if (key === \"translateZ\") {\n      state.z = value;\n      return;\n    }\n    state[key] = value;\n  });\n}\n\nfunction useElementTransform(target, onInit) {\n  let _cache;\n  let _target;\n  const { state, transform } = reactiveTransform();\n  usePermissiveTarget(target, (el) => {\n    _target = el;\n    if (el.style.transform)\n      stateFromTransform(state, el.style.transform);\n    if (_cache)\n      el.style.transform = _cache;\n    if (onInit)\n      onInit(state);\n  });\n  watch(\n    transform,\n    (newValue) => {\n      if (!_target) {\n        _cache = newValue;\n        return;\n      }\n      _target.style.transform = newValue;\n    },\n    {\n      immediate: true\n    }\n  );\n  return {\n    transform: state\n  };\n}\n\nfunction useMotionProperties(target, defaultValues) {\n  const motionProperties = reactive({});\n  const apply = (values) => Object.entries(values).forEach(([key, value]) => motionProperties[key] = value);\n  const { style } = useElementStyle(target, apply);\n  const { transform } = useElementTransform(target, apply);\n  watch(\n    motionProperties,\n    (newVal) => {\n      Object.entries(newVal).forEach(([key, value]) => {\n        const target2 = isTransformProp(key) ? transform : style;\n        if (target2[key] && target2[key] === value)\n          return;\n        target2[key] = value;\n      });\n    },\n    {\n      immediate: true,\n      deep: true\n    }\n  );\n  usePermissiveTarget(target, () => defaultValues && apply(defaultValues));\n  return {\n    motionProperties,\n    style,\n    transform\n  };\n}\n\nfunction useMotionVariants(variants = {}) {\n  const _variants = unref(variants);\n  const variant = ref();\n  const state = computed(() => {\n    if (!variant.value)\n      return;\n    return _variants[variant.value];\n  });\n  return {\n    state,\n    variant\n  };\n}\n\nfunction useMotion(target, variants = {}, options) {\n  const { motionProperties } = useMotionProperties(target);\n  const { variant, state } = useMotionVariants(variants);\n  const controls = useMotionControls(motionProperties, variants);\n  const instance = {\n    target,\n    variant,\n    variants,\n    state,\n    motionProperties,\n    ...controls\n  };\n  useMotionFeatures(instance, options);\n  return instance;\n}\n\nconst directivePropsKeys = [\"initial\", \"enter\", \"leave\", \"visible\", \"visible-once\", \"visibleOnce\", \"hovered\", \"tapped\", \"focused\", \"delay\"];\nfunction resolveVariants(node, variantsRef) {\n  const target = node.props ? node.props : node.data && node.data.attrs ? node.data.attrs : {};\n  if (target) {\n    if (target.variants && isObject(target.variants)) {\n      variantsRef.value = {\n        ...variantsRef.value,\n        ...target.variants\n      };\n    }\n    directivePropsKeys.forEach((key) => {\n      if (key === \"delay\") {\n        if (target && target[key] && typeof target[key] === \"number\") {\n          const delay = target[key];\n          if (variantsRef && variantsRef.value) {\n            if (variantsRef.value.enter) {\n              if (!variantsRef.value.enter.transition)\n                variantsRef.value.enter.transition = {};\n              variantsRef.value.enter.transition = {\n                delay,\n                ...variantsRef.value.enter.transition\n              };\n            }\n            if (variantsRef.value.visible) {\n              if (!variantsRef.value.visible.transition)\n                variantsRef.value.visible.transition = {};\n              variantsRef.value.visible.transition = {\n                delay,\n                ...variantsRef.value.visible.transition\n              };\n            }\n            if (variantsRef.value.visibleOnce) {\n              if (!variantsRef.value.visibleOnce.transition)\n                variantsRef.value.visibleOnce.transition = {};\n              variantsRef.value.visibleOnce.transition = {\n                delay,\n                ...variantsRef.value.visibleOnce.transition\n              };\n            }\n          }\n        }\n        return;\n      }\n      if (target && target[key] && isObject(target[key])) {\n        const prop = target[key];\n        if (key === \"visible-once\")\n          key = \"visibleOnce\";\n        variantsRef.value[key] = prop;\n      }\n    });\n  }\n}\n\nfunction directive(variants) {\n  const register = (el, binding, node) => {\n    const key = binding.value && typeof binding.value === \"string\" ? binding.value : node.key;\n    if (key && motionState[key])\n      motionState[key].stop();\n    const variantsRef = ref(variants || {});\n    if (typeof binding.value === \"object\")\n      variantsRef.value = binding.value;\n    resolveVariants(node, variantsRef);\n    const motionOptions = { eventListeners: true, lifeCycleHooks: true, syncVariants: true, visibilityHooks: false };\n    const motionInstance = useMotion(el, variantsRef, motionOptions);\n    el.motionInstance = motionInstance;\n    if (key)\n      motionState[key] = motionInstance;\n  };\n  const mounted = (el, binding, node) => {\n    el.motionInstance && registerVisibilityHooks(el.motionInstance);\n  };\n  return {\n    created: register,\n    mounted,\n    getSSRProps(binding, node) {\n      let { initial: bindingInitial } = binding.value || node && node?.props || {};\n      bindingInitial = unref(bindingInitial);\n      const initial = defu(variants?.initial || {}, bindingInitial || {});\n      if (!initial || Object.keys(initial).length === 0)\n        return;\n      const style = variantToStyle(initial);\n      return {\n        style\n      };\n    }\n  };\n}\n\nconst fade = {\n  initial: {\n    opacity: 0\n  },\n  enter: {\n    opacity: 1\n  }\n};\nconst fadeVisible = {\n  initial: {\n    opacity: 0\n  },\n  visible: {\n    opacity: 1\n  }\n};\nconst fadeVisibleOnce = {\n  initial: {\n    opacity: 0\n  },\n  visibleOnce: {\n    opacity: 1\n  }\n};\n\nconst pop = {\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  enter: {\n    scale: 1,\n    opacity: 1\n  }\n};\nconst popVisible = {\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  visible: {\n    scale: 1,\n    opacity: 1\n  }\n};\nconst popVisibleOnce = {\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  visibleOnce: {\n    scale: 1,\n    opacity: 1\n  }\n};\n\nconst rollLeft = {\n  initial: {\n    x: -100,\n    rotate: 90,\n    opacity: 0\n  },\n  enter: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleLeft = {\n  initial: {\n    x: -100,\n    rotate: 90,\n    opacity: 0\n  },\n  visible: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleOnceLeft = {\n  initial: {\n    x: -100,\n    rotate: 90,\n    opacity: 0\n  },\n  visibleOnce: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollRight = {\n  initial: {\n    x: 100,\n    rotate: -90,\n    opacity: 0\n  },\n  enter: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleRight = {\n  initial: {\n    x: 100,\n    rotate: -90,\n    opacity: 0\n  },\n  visible: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleOnceRight = {\n  initial: {\n    x: 100,\n    rotate: -90,\n    opacity: 0\n  },\n  visibleOnce: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollTop = {\n  initial: {\n    y: -100,\n    rotate: -90,\n    opacity: 0\n  },\n  enter: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleTop = {\n  initial: {\n    y: -100,\n    rotate: -90,\n    opacity: 0\n  },\n  visible: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleOnceTop = {\n  initial: {\n    y: -100,\n    rotate: -90,\n    opacity: 0\n  },\n  visibleOnce: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollBottom = {\n  initial: {\n    y: 100,\n    rotate: 90,\n    opacity: 0\n  },\n  enter: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleBottom = {\n  initial: {\n    y: 100,\n    rotate: 90,\n    opacity: 0\n  },\n  visible: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleOnceBottom = {\n  initial: {\n    y: 100,\n    rotate: 90,\n    opacity: 0\n  },\n  visibleOnce: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\n\nconst slideLeft = {\n  initial: {\n    x: -100,\n    opacity: 0\n  },\n  enter: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleLeft = {\n  initial: {\n    x: -100,\n    opacity: 0\n  },\n  visible: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleOnceLeft = {\n  initial: {\n    x: -100,\n    opacity: 0\n  },\n  visibleOnce: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideRight = {\n  initial: {\n    x: 100,\n    opacity: 0\n  },\n  enter: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleRight = {\n  initial: {\n    x: 100,\n    opacity: 0\n  },\n  visible: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleOnceRight = {\n  initial: {\n    x: 100,\n    opacity: 0\n  },\n  visibleOnce: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideTop = {\n  initial: {\n    y: -100,\n    opacity: 0\n  },\n  enter: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleTop = {\n  initial: {\n    y: -100,\n    opacity: 0\n  },\n  visible: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleOnceTop = {\n  initial: {\n    y: -100,\n    opacity: 0\n  },\n  visibleOnce: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideBottom = {\n  initial: {\n    y: 100,\n    opacity: 0\n  },\n  enter: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleBottom = {\n  initial: {\n    y: 100,\n    opacity: 0\n  },\n  visible: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleOnceBottom = {\n  initial: {\n    y: 100,\n    opacity: 0\n  },\n  visibleOnce: {\n    y: 0,\n    opacity: 1\n  }\n};\n\nconst presets = {\n  __proto__: null,\n  fade: fade,\n  fadeVisible: fadeVisible,\n  fadeVisibleOnce: fadeVisibleOnce,\n  pop: pop,\n  popVisible: popVisible,\n  popVisibleOnce: popVisibleOnce,\n  rollBottom: rollBottom,\n  rollLeft: rollLeft,\n  rollRight: rollRight,\n  rollTop: rollTop,\n  rollVisibleBottom: rollVisibleBottom,\n  rollVisibleLeft: rollVisibleLeft,\n  rollVisibleOnceBottom: rollVisibleOnceBottom,\n  rollVisibleOnceLeft: rollVisibleOnceLeft,\n  rollVisibleOnceRight: rollVisibleOnceRight,\n  rollVisibleOnceTop: rollVisibleOnceTop,\n  rollVisibleRight: rollVisibleRight,\n  rollVisibleTop: rollVisibleTop,\n  slideBottom: slideBottom,\n  slideLeft: slideLeft,\n  slideRight: slideRight,\n  slideTop: slideTop,\n  slideVisibleBottom: slideVisibleBottom,\n  slideVisibleLeft: slideVisibleLeft,\n  slideVisibleOnceBottom: slideVisibleOnceBottom,\n  slideVisibleOnceLeft: slideVisibleOnceLeft,\n  slideVisibleOnceRight: slideVisibleOnceRight,\n  slideVisibleOnceTop: slideVisibleOnceTop,\n  slideVisibleRight: slideVisibleRight,\n  slideVisibleTop: slideVisibleTop\n};\n\nconst component = defineComponent({\n  props: {\n    is: {\n      type: [String, Object],\n      required: false\n    },\n    // Preset to be loaded\n    preset: {\n      type: String,\n      required: false\n    },\n    // Instance\n    instance: {\n      type: Object,\n      required: false\n    },\n    // Variants\n    variants: {\n      type: Object,\n      required: false\n    },\n    // Initial variant\n    initial: {\n      type: Object,\n      required: false\n    },\n    // Lifecycle hooks variants\n    enter: {\n      type: Object,\n      required: false\n    },\n    leave: {\n      type: Object,\n      required: false\n    },\n    // Intersection observer variants\n    visible: {\n      type: Object,\n      required: false\n    },\n    visibleOnce: {\n      type: Object,\n      required: false\n    },\n    // Event listeners variants\n    hovered: {\n      type: Object,\n      required: false\n    },\n    tapped: {\n      type: Object,\n      required: false\n    },\n    focused: {\n      type: Object,\n      required: false\n    },\n    // Helpers\n    delay: {\n      type: [Number, String],\n      required: false\n    }\n  },\n  setup(props) {\n    const slots = useSlots();\n    const instances = reactive({});\n    if (!props.is && !slots.default)\n      return () => h(\"div\", {});\n    const _preset = computed(() => {\n      let preset;\n      if (props.preset)\n        preset = presets[props.preset];\n      return preset;\n    });\n    const propsConfig = computed(() => ({\n      initial: props.initial,\n      enter: props.enter,\n      leave: props.leave,\n      visible: props.visible,\n      visibleOnce: props.visibleOnce,\n      hovered: props.hovered,\n      tapped: props.tapped,\n      focused: props.focused\n    }));\n    const motionConfig = computed(() => {\n      const config = {\n        ...propsConfig.value,\n        ..._preset.value || {},\n        ...props.variants || {}\n      };\n      if (props.delay) {\n        config.enter.transition = { ...config.enter.transition };\n        config.enter.transition.delay = parseInt(props.delay);\n      }\n      return config;\n    });\n    const component = computed(() => {\n      if (!props.is)\n        return;\n      let comp = props.is;\n      if (typeof component.value === \"string\" && !isHTMLTag(comp)) {\n        comp = resolveComponent(comp);\n      }\n      return comp;\n    });\n    if (process?.env?.NODE_ENV === \"development\" || process?.dev) {\n      const replayAnimation = (instance) => {\n        if (instance.variants?.initial)\n          instance.set(\"initial\");\n        setTimeout(() => {\n          if (instance.variants?.enter)\n            instance.apply(\"enter\");\n          if (instance.variants?.visible)\n            instance.apply(\"visible\");\n          if (instance.variants?.visibleOnce)\n            instance.apply(\"visibleOnce\");\n        }, 10);\n      };\n      onUpdated(() => Object.entries(instances).forEach(([_, value]) => replayAnimation(value)));\n    }\n    return {\n      slots,\n      component,\n      motionConfig,\n      instances\n    };\n  },\n  render({ slots, motionConfig, instances, component }) {\n    const style = variantToStyle(motionConfig.initial || {});\n    const setNode = (node, index) => {\n      if (!node.props)\n        node.props = {};\n      node.props.style = style;\n      node.props.onVnodeMounted = ({ el }) => {\n        const instance = useMotion(el, motionConfig);\n        instances[index] = instance;\n      };\n      return node;\n    };\n    if (component) {\n      const node = h(component, void 0, slots);\n      setNode(node, 0);\n      return node;\n    }\n    const nodes = slots.default?.() || [];\n    return nodes.map((node, index) => setNode(node, index));\n  }\n});\n\nfunction slugify(string) {\n  const a = \"\\xE0\\xE1\\xE2\\xE4\\xE6\\xE3\\xE5\\u0101\\u0103\\u0105\\xE7\\u0107\\u010D\\u0111\\u010F\\xE8\\xE9\\xEA\\xEB\\u0113\\u0117\\u0119\\u011B\\u011F\\u01F5\\u1E27\\xEE\\xEF\\xED\\u012B\\u012F\\xEC\\u0142\\u1E3F\\xF1\\u0144\\u01F9\\u0148\\xF4\\xF6\\xF2\\xF3\\u0153\\xF8\\u014D\\xF5\\u0151\\u1E55\\u0155\\u0159\\xDF\\u015B\\u0161\\u015F\\u0219\\u0165\\u021B\\xFB\\xFC\\xF9\\xFA\\u016B\\u01D8\\u016F\\u0171\\u0173\\u1E83\\u1E8D\\xFF\\xFD\\u017E\\u017A\\u017C\\xB7/_,:;\";\n  const b = \"aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------\";\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\n  return string.toString().replace(/[A-Z]/g, (s) => `-${s}`).toLowerCase().replace(/\\s+/g, \"-\").replace(p, (c) => b.charAt(a.indexOf(c))).replace(/&/g, \"-and-\").replace(/[^\\w\\-]+/g, \"\").replace(/\\-\\-+/g, \"-\").replace(/^-+/, \"\").replace(/-+$/, \"\");\n}\n\nconst MotionPlugin = {\n  install(app, options) {\n    app.directive(\"motion\", directive());\n    app.component(\"Motion\", component);\n    if (!options || options && !options.excludePresets) {\n      for (const key in presets) {\n        const preset = presets[key];\n        app.directive(`motion-${slugify(key)}`, directive(preset));\n      }\n    }\n    if (options && options.directives) {\n      for (const key in options.directives) {\n        const variants = options.directives[key];\n        if (!variants.initial && __DEV__) {\n          console.warn(`Your directive v-motion-${key} is missing initial variant!`);\n        }\n        app.directive(`motion-${key}`, directive(variants));\n      }\n    }\n  }\n};\n\nfunction isMotionInstance(obj) {\n  const _obj = obj;\n  return _obj.apply !== void 0 && typeof _obj.apply === \"function\" && _obj.set !== void 0 && typeof _obj.set === \"function\" && _obj.target !== void 0 && isRef(_obj.target);\n}\n\nfunction useMotions() {\n  return motionState;\n}\n\nfunction useSpring(values, spring) {\n  const { stop, get } = useMotionValues();\n  return {\n    values,\n    stop,\n    set: (properties) => Promise.all(\n      Object.entries(properties).map(([key, value]) => {\n        const motionValue = get(key, values[key], values);\n        return motionValue.start((onComplete) => {\n          const options = {\n            type: \"spring\",\n            ...spring || getDefaultTransition(key, value)\n          };\n          return animate({\n            from: motionValue.get(),\n            to: value,\n            velocity: motionValue.getVelocity(),\n            onUpdate: (v) => motionValue.set(v),\n            onComplete,\n            ...options\n          });\n        });\n      })\n    )\n  };\n}\n\nfunction useReducedMotion(options = {}) {\n  return useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n}\n\nexport { directive as MotionDirective, MotionPlugin, fade, fadeVisible, fadeVisibleOnce, isMotionInstance, pop, popVisible, popVisibleOnce, reactiveStyle, reactiveTransform, rollBottom, rollLeft, rollRight, rollTop, rollVisibleBottom, rollVisibleLeft, rollVisibleOnceBottom, rollVisibleOnceLeft, rollVisibleOnceRight, rollVisibleOnceTop, rollVisibleRight, rollVisibleTop, slideBottom, slideLeft, slideRight, slideTop, slideVisibleBottom, slideVisibleLeft, slideVisibleOnceBottom, slideVisibleOnceLeft, slideVisibleOnceRight, slideVisibleOnceTop, slideVisibleRight, slideVisibleTop, slugify, useElementStyle, useElementTransform, useMotion, useMotionControls, useMotionProperties, useMotionTransitions, useMotionVariants, useMotions, useReducedMotion, useSpring };\n",
      "start": 1713208776887,
      "end": 1713208777147,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1713208777147,
      "end": 1713208777147,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208777147,
      "end": 1713208777148,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1713208777148,
      "end": 1713208777152,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import defu from \"defu\";\nimport { ref, unref, watch, computed, reactive, defineComponent, useSlots, h, resolveComponent, onUpdated, isRef } from \"vue\";\nimport { isObject, useEventListener, useIntersectionObserver, unrefElement, useMediaQuery } from \"@vueuse/core\";\nimport { tryOnUnmounted } from \"@vueuse/shared\";\nimport sync, { getFrameData } from \"framesync\";\nimport { velocityPerSecond, inertia, animate, cubicBezier, linear, easeIn, easeInOut, easeOut, circIn, circInOut, circOut, backIn, backInOut, backOut, anticipate, bounceIn, bounceInOut, bounceOut } from \"popmotion\";\nimport { number, color, px, degrees, scale, alpha, progressPercentage, filter, complex } from \"style-value-types\";\nimport { isHTMLTag } from \"@vue/shared\";\nconst motionState = {};\nvar __defProp$1 = Object.defineProperty;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$1 = (obj, key, value) => {\n  __defNormalProp$1(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass SubscriptionManager {\n  constructor() {\n    __publicField$1(this, \"subscriptions\", /* @__PURE__ */ new Set());\n  }\n  add(handler) {\n    this.subscriptions.add(handler);\n    return () => this.subscriptions.delete(handler);\n  }\n  notify(a, b, c) {\n    if (!this.subscriptions.size)\n      return;\n    for (const handler of this.subscriptions)\n      handler(a, b, c);\n  }\n  clear() {\n    this.subscriptions.clear();\n  }\n}\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nfunction isFloat(value) {\n  return !isNaN(parseFloat(value));\n}\nclass MotionValue {\n  /**\n   * @param init - The initiating value\n   * @param config - Optional configuration options\n   */\n  constructor(init) {\n    __publicField(this, \"current\");\n    __publicField(this, \"prev\");\n    __publicField(this, \"timeDelta\", 0);\n    __publicField(this, \"lastUpdated\", 0);\n    __publicField(this, \"updateSubscribers\", new SubscriptionManager());\n    __publicField(this, \"stopAnimation\");\n    __publicField(this, \"canTrackVelocity\", false);\n    __publicField(this, \"updateAndNotify\", (v) => {\n      this.prev = this.current;\n      this.current = v;\n      const { delta, timestamp } = getFrameData();\n      if (this.lastUpdated !== timestamp) {\n        this.timeDelta = delta;\n        this.lastUpdated = timestamp;\n      }\n      sync.postRender(this.scheduleVelocityCheck);\n      this.updateSubscribers.notify(this.current);\n    });\n    __publicField(this, \"scheduleVelocityCheck\", () => sync.postRender(this.velocityCheck));\n    __publicField(this, \"velocityCheck\", ({ timestamp }) => {\n      if (!this.canTrackVelocity)\n        this.canTrackVelocity = isFloat(this.current);\n      if (timestamp !== this.lastUpdated)\n        this.prev = this.current;\n    });\n    this.prev = this.current = init;\n    this.canTrackVelocity = isFloat(this.current);\n  }\n  /**\n   * Adds a function that will be notified when the `MotionValue` is updated.\n   *\n   * It returns a function that, when called, will cancel the subscription.\n   */\n  onChange(subscription) {\n    return this.updateSubscribers.add(subscription);\n  }\n  clearListeners() {\n    this.updateSubscribers.clear();\n  }\n  /**\n   * Sets the state of the `MotionValue`.\n   *\n   * @param v\n   * @param render\n   */\n  set(v) {\n    this.updateAndNotify(v);\n  }\n  /**\n   * Returns the latest state of `MotionValue`\n   *\n   * @returns - The latest state of `MotionValue`\n   */\n  get() {\n    return this.current;\n  }\n  /**\n   * Get previous value.\n   *\n   * @returns - The previous latest state of `MotionValue`\n   */\n  getPrevious() {\n    return this.prev;\n  }\n  /**\n   * Returns the latest velocity of `MotionValue`\n   *\n   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n   */\n  getVelocity() {\n    return this.canTrackVelocity ? velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;\n  }\n  /**\n   * Registers a new animation to control this `MotionValue`. Only one\n   * animation can drive a `MotionValue` at one time.\n   */\n  start(animation) {\n    this.stop();\n    return new Promise((resolve) => {\n      const { stop } = animation(resolve);\n      this.stopAnimation = stop;\n    }).then(() => this.clearAnimation());\n  }\n  /**\n   * Stop the currently active animation.\n   */\n  stop() {\n    if (this.stopAnimation)\n      this.stopAnimation();\n    this.clearAnimation();\n  }\n  /**\n   * Returns `true` if this value is currently animating.\n   */\n  isAnimating() {\n    return !!this.stopAnimation;\n  }\n  /**\n   * Clear the current animation reference.\n   */\n  clearAnimation() {\n    this.stopAnimation = null;\n  }\n  /**\n   * Destroy and clean up subscribers to this `MotionValue`.\n   */\n  destroy() {\n    this.updateSubscribers.clear();\n    this.stop();\n  }\n}\nfunction getMotionValue(init) {\n  return new MotionValue(init);\n}\nconst { isArray } = Array;\nfunction useMotionValues() {\n  const motionValues = ref({});\n  const stop = (keys) => {\n    const destroyKey = (key) => {\n      if (!motionValues.value[key])\n        return;\n      motionValues.value[key].stop();\n      motionValues.value[key].destroy();\n      delete motionValues.value[key];\n    };\n    if (keys) {\n      if (isArray(keys)) {\n        keys.forEach(destroyKey);\n      } else {\n        destroyKey(keys);\n      }\n    } else {\n      Object.keys(motionValues.value).forEach(destroyKey);\n    }\n  };\n  const get = (key, from, target) => {\n    if (motionValues.value[key])\n      return motionValues.value[key];\n    const motionValue = getMotionValue(from);\n    motionValue.onChange((v) => target[key] = v);\n    motionValues.value[key] = motionValue;\n    return motionValue;\n  };\n  tryOnUnmounted(stop);\n  return {\n    motionValues,\n    get,\n    stop\n  };\n}\nfunction isKeyframesTarget(v) {\n  return Array.isArray(v);\n}\nfunction underDampedSpring() {\n  return {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restDelta: 0.5,\n    restSpeed: 10\n  };\n}\nfunction criticallyDampedSpring(to) {\n  return {\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restDelta: 0.01,\n    restSpeed: 10\n  };\n}\nfunction overDampedSpring(to) {\n  return {\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 100 : 30,\n    restDelta: 0.01,\n    restSpeed: 10\n  };\n}\nfunction linearTween() {\n  return {\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 300\n  };\n}\nfunction keyframes(values) {\n  return {\n    type: \"keyframes\",\n    duration: 800,\n    values\n  };\n}\nconst defaultTransitions = {\n  default: overDampedSpring,\n  x: underDampedSpring,\n  y: underDampedSpring,\n  z: underDampedSpring,\n  rotate: underDampedSpring,\n  rotateX: underDampedSpring,\n  rotateY: underDampedSpring,\n  rotateZ: underDampedSpring,\n  scaleX: criticallyDampedSpring,\n  scaleY: criticallyDampedSpring,\n  scale: criticallyDampedSpring,\n  backgroundColor: linearTween,\n  color: linearTween,\n  opacity: linearTween\n};\nfunction getDefaultTransition(valueKey, to) {\n  let transitionFactory;\n  if (isKeyframesTarget(to)) {\n    transitionFactory = keyframes;\n  } else {\n    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;\n  }\n  return { to, ...transitionFactory(to) };\n}\nconst int = {\n  ...number,\n  transform: Math.round\n};\nconst valueTypes = {\n  // Color props\n  color,\n  backgroundColor: color,\n  outlineColor: color,\n  fill: color,\n  stroke: color,\n  // Border props\n  borderColor: color,\n  borderTopColor: color,\n  borderRightColor: color,\n  borderBottomColor: color,\n  borderLeftColor: color,\n  borderWidth: px,\n  borderTopWidth: px,\n  borderRightWidth: px,\n  borderBottomWidth: px,\n  borderLeftWidth: px,\n  borderRadius: px,\n  radius: px,\n  borderTopLeftRadius: px,\n  borderTopRightRadius: px,\n  borderBottomRightRadius: px,\n  borderBottomLeftRadius: px,\n  // Positioning props\n  width: px,\n  maxWidth: px,\n  height: px,\n  maxHeight: px,\n  size: px,\n  top: px,\n  right: px,\n  bottom: px,\n  left: px,\n  // Spacing props\n  padding: px,\n  paddingTop: px,\n  paddingRight: px,\n  paddingBottom: px,\n  paddingLeft: px,\n  margin: px,\n  marginTop: px,\n  marginRight: px,\n  marginBottom: px,\n  marginLeft: px,\n  // Transform props\n  rotate: degrees,\n  rotateX: degrees,\n  rotateY: degrees,\n  rotateZ: degrees,\n  scale,\n  scaleX: scale,\n  scaleY: scale,\n  scaleZ: scale,\n  skew: degrees,\n  skewX: degrees,\n  skewY: degrees,\n  distance: px,\n  translateX: px,\n  translateY: px,\n  translateZ: px,\n  x: px,\n  y: px,\n  z: px,\n  perspective: px,\n  transformPerspective: px,\n  opacity: alpha,\n  originX: progressPercentage,\n  originY: progressPercentage,\n  originZ: px,\n  // Misc\n  zIndex: int,\n  filter,\n  WebkitFilter: filter,\n  // SVG\n  fillOpacity: alpha,\n  strokeOpacity: alpha,\n  numOctaves: int\n};\nconst getValueType = (key) => valueTypes[key];\nfunction getValueAsType(value, type) {\n  return type && typeof value === \"number\" && type.transform ? type.transform(value) : value;\n}\nfunction getAnimatableNone(key, value) {\n  let defaultValueType = getValueType(key);\n  if (defaultValueType !== filter)\n    defaultValueType = complex;\n  return defaultValueType.getAnimatableNone ? defaultValueType.getAnimatableNone(value) : void 0;\n}\nconst easingLookup = {\n  linear,\n  easeIn,\n  easeInOut,\n  easeOut,\n  circIn,\n  circInOut,\n  circOut,\n  backIn,\n  backInOut,\n  backOut,\n  anticipate,\n  bounceIn,\n  bounceInOut,\n  bounceOut\n};\nfunction easingDefinitionToFunction(definition) {\n  if (Array.isArray(definition)) {\n    const [x1, y1, x2, y2] = definition;\n    return cubicBezier(x1, y1, x2, y2);\n  } else if (typeof definition === \"string\") {\n    return easingLookup[definition];\n  }\n  return definition;\n}\nfunction isEasingArray(ease) {\n  return Array.isArray(ease) && typeof ease[0] !== \"number\";\n}\nfunction isAnimatable(key, value) {\n  if (key === \"zIndex\")\n    return false;\n  if (typeof value === \"number\" || Array.isArray(value))\n    return true;\n  if (typeof value === \"string\" && // It's animatable if we have a string\n  complex.test(value) && // And it contains numbers and/or colors\n  !value.startsWith(\"url(\"))\n    return true;\n  return false;\n}\nfunction hydrateKeyframes(options) {\n  if (Array.isArray(options.to) && options.to[0] === null) {\n    options.to = [...options.to];\n    options.to[0] = options.from;\n  }\n  return options;\n}\nfunction convertTransitionToAnimationOptions({ ease, times, delay, ...transition }) {\n  const options = { ...transition };\n  if (times)\n    options.offset = times;\n  if (ease) {\n    options.ease = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);\n  }\n  if (delay)\n    options.elapsed = -delay;\n  return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n  if (Array.isArray(options.to)) {\n    if (!transition.duration)\n      transition.duration = 800;\n  }\n  hydrateKeyframes(options);\n  if (!isTransitionDefined(transition)) {\n    transition = {\n      ...transition,\n      ...getDefaultTransition(key, options.to)\n    };\n  }\n  return {\n    ...options,\n    ...convertTransitionToAnimationOptions(transition)\n  };\n}\nfunction isTransitionDefined({ delay, repeat, repeatType, repeatDelay, from, ...transition }) {\n  return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n  return transition[key] || transition.default || transition;\n}\nfunction getAnimation(key, value, target, transition, onComplete) {\n  const valueTransition = getValueTransition(transition, key);\n  let origin = valueTransition.from === null || valueTransition.from === void 0 ? value.get() : valueTransition.from;\n  const isTargetAnimatable = isAnimatable(key, target);\n  if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\")\n    origin = getAnimatableNone(key, target);\n  const isOriginAnimatable = isAnimatable(key, origin);\n  function start(complete) {\n    const options = {\n      from: origin,\n      to: target,\n      velocity: transition.velocity ? transition.velocity : value.getVelocity(),\n      onUpdate: (v) => value.set(v)\n    };\n    return valueTransition.type === \"inertia\" || valueTransition.type === \"decay\" ? inertia({ ...options, ...valueTransition }) : animate({\n      ...getPopmotionAnimationOptions(valueTransition, options, key),\n      onUpdate: (v) => {\n        options.onUpdate(v);\n        if (valueTransition.onUpdate)\n          valueTransition.onUpdate(v);\n      },\n      onComplete: () => {\n        if (transition.onComplete)\n          transition.onComplete();\n        if (onComplete)\n          onComplete();\n        if (complete)\n          complete();\n      }\n    });\n  }\n  function set(complete) {\n    value.set(target);\n    if (transition.onComplete)\n      transition.onComplete();\n    if (onComplete)\n      onComplete();\n    if (complete)\n      complete();\n    return { stop: () => {\n    } };\n  }\n  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set : start;\n}\nfunction useMotionTransitions() {\n  const { motionValues, stop, get } = useMotionValues();\n  const push = (key, value, target, transition = {}, onComplete) => {\n    const from = target[key];\n    const motionValue = get(key, from, target);\n    if (transition && transition.immediate) {\n      motionValue.set(value);\n      return;\n    }\n    const animation = getAnimation(key, motionValue, value, transition, onComplete);\n    motionValue.start(animation);\n  };\n  return { motionValues, stop, push };\n}\nfunction useMotionControls(motionProperties, variants = {}, { motionValues, push, stop } = useMotionTransitions()) {\n  const _variants = unref(variants);\n  const isAnimating = ref(false);\n  watch(\n    motionValues,\n    (newVal) => {\n      isAnimating.value = Object.values(newVal).filter((value) => value.isAnimating()).length > 0;\n    },\n    {\n      immediate: true,\n      deep: true\n    }\n  );\n  const getVariantFromKey = (variant) => {\n    if (!_variants || !_variants[variant])\n      throw new Error(`The variant ${variant} does not exist.`);\n    return _variants[variant];\n  };\n  const apply = (variant) => {\n    if (typeof variant === \"string\")\n      variant = getVariantFromKey(variant);\n    return Promise.all(\n      Object.entries(variant).map(([key, value]) => {\n        if (key === \"transition\")\n          return void 0;\n        return new Promise(\n          (resolve) => (\n            // @ts-expect-error - Fix errors later for typescript 5\n            push(key, value, motionProperties, variant.transition || getDefaultTransition(key, variant[key]), resolve)\n          )\n        );\n      }).filter(Boolean)\n    );\n  };\n  const set = (variant) => {\n    const variantData = isObject(variant) ? variant : getVariantFromKey(variant);\n    Object.entries(variantData).forEach(([key, value]) => {\n      if (key === \"transition\")\n        return;\n      push(key, value, motionProperties, {\n        immediate: true\n      });\n    });\n  };\n  const leave = async (done) => {\n    let leaveVariant;\n    if (_variants) {\n      if (_variants.leave)\n        leaveVariant = _variants.leave;\n      if (!_variants.leave && _variants.initial)\n        leaveVariant = _variants.initial;\n    }\n    if (!leaveVariant) {\n      done();\n      return;\n    }\n    await apply(leaveVariant);\n    done();\n  };\n  return {\n    isAnimating,\n    apply,\n    set,\n    leave,\n    stop\n  };\n}\nconst isBrowser = false;\nconst supportsPointerEvents = () => isBrowser && (void 0).onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && (void 0).ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && (void 0).onmousedown === null;\nfunction registerEventListeners({ target, state, variants, apply }) {\n  const _variants = unref(variants);\n  const hovered = ref(false);\n  const tapped = ref(false);\n  const focused = ref(false);\n  const mutableKeys = computed(() => {\n    let result = [];\n    if (!_variants)\n      return result;\n    if (_variants.hovered)\n      result = [...result, ...Object.keys(_variants.hovered)];\n    if (_variants.tapped)\n      result = [...result, ...Object.keys(_variants.tapped)];\n    if (_variants.focused)\n      result = [...result, ...Object.keys(_variants.focused)];\n    return result;\n  });\n  const computedProperties = computed(() => {\n    const result = {};\n    Object.assign(result, state.value);\n    if (hovered.value && _variants.hovered)\n      Object.assign(result, _variants.hovered);\n    if (tapped.value && _variants.tapped)\n      Object.assign(result, _variants.tapped);\n    if (focused.value && _variants.focused)\n      Object.assign(result, _variants.focused);\n    for (const key in result) {\n      if (!mutableKeys.value.includes(key))\n        delete result[key];\n    }\n    return result;\n  });\n  if (_variants.hovered) {\n    useEventListener(target, \"mouseenter\", () => hovered.value = true);\n    useEventListener(target, \"mouseleave\", () => {\n      hovered.value = false;\n      tapped.value = false;\n    });\n    useEventListener(target, \"mouseout\", () => {\n      hovered.value = false;\n      tapped.value = false;\n    });\n  }\n  if (_variants.tapped) {\n    if (supportsMouseEvents()) {\n      useEventListener(target, \"mousedown\", () => tapped.value = true);\n      useEventListener(target, \"mouseup\", () => tapped.value = false);\n    }\n    if (supportsPointerEvents()) {\n      useEventListener(target, \"pointerdown\", () => tapped.value = true);\n      useEventListener(target, \"pointerup\", () => tapped.value = false);\n    }\n    if (supportsTouchEvents()) {\n      useEventListener(target, \"touchstart\", () => tapped.value = true);\n      useEventListener(target, \"touchend\", () => tapped.value = false);\n    }\n  }\n  if (_variants.focused) {\n    useEventListener(target, \"focus\", () => focused.value = true);\n    useEventListener(target, \"blur\", () => focused.value = false);\n  }\n  watch(computedProperties, apply);\n}\nfunction registerLifeCycleHooks({ set, target, variants, variant }) {\n  const _variants = unref(variants);\n  watch(\n    () => target,\n    () => {\n      if (!_variants)\n        return;\n      if (_variants.initial)\n        set(\"initial\");\n      if (_variants.enter)\n        variant.value = \"enter\";\n    },\n    {\n      immediate: true,\n      flush: \"pre\"\n    }\n  );\n}\nfunction registerVariantsSync({ state, apply }) {\n  watch(\n    state,\n    (newVal) => {\n      if (newVal)\n        apply(newVal);\n    },\n    {\n      immediate: true\n    }\n  );\n}\nfunction registerVisibilityHooks({ target, variants, variant }) {\n  const _variants = unref(variants);\n  if (_variants && (_variants.visible || _variants.visibleOnce)) {\n    useIntersectionObserver(target, ([{ isIntersecting }]) => {\n      if (_variants.visible) {\n        if (isIntersecting)\n          variant.value = \"visible\";\n        else\n          variant.value = \"initial\";\n      } else if (_variants.visibleOnce) {\n        if (isIntersecting && variant.value !== \"visibleOnce\")\n          variant.value = \"visibleOnce\";\n        else if (!variant.value)\n          variant.value = \"initial\";\n      }\n    });\n  }\n}\nfunction useMotionFeatures(instance, options = {\n  syncVariants: true,\n  lifeCycleHooks: true,\n  visibilityHooks: true,\n  eventListeners: true\n}) {\n  if (options.lifeCycleHooks)\n    registerLifeCycleHooks(instance);\n  if (options.syncVariants)\n    registerVariantsSync(instance);\n  if (options.visibilityHooks)\n    registerVisibilityHooks(instance);\n  if (options.eventListeners)\n    registerEventListeners(instance);\n}\nfunction reactiveStyle(props = {}) {\n  const state = reactive({\n    ...props\n  });\n  const style = ref({});\n  watch(\n    state,\n    () => {\n      const result = {};\n      for (const [key, value] of Object.entries(state)) {\n        const valueType = getValueType(key);\n        const valueAsType = getValueAsType(value, valueType);\n        result[key] = valueAsType;\n      }\n      style.value = result;\n    },\n    {\n      immediate: true,\n      deep: true\n    }\n  );\n  return {\n    state,\n    style\n  };\n}\nfunction usePermissiveTarget(target, onTarget) {\n  watch(\n    () => unrefElement(target),\n    (el) => {\n      if (!el)\n        return;\n      onTarget(el);\n    },\n    {\n      immediate: true\n    }\n  );\n}\nconst translateAlias = {\n  x: \"translateX\",\n  y: \"translateY\",\n  z: \"translateZ\"\n};\nfunction reactiveTransform(props = {}, enableHardwareAcceleration = true) {\n  const state = reactive({ ...props });\n  const transform = ref(\"\");\n  watch(\n    state,\n    (newVal) => {\n      let result = \"\";\n      let hasHardwareAcceleration = false;\n      if (enableHardwareAcceleration && (newVal.x || newVal.y || newVal.z)) {\n        const str = [newVal.x || 0, newVal.y || 0, newVal.z || 0].map(px.transform).join(\",\");\n        result += `translate3d(${str}) `;\n        hasHardwareAcceleration = true;\n      }\n      for (const [key, value] of Object.entries(newVal)) {\n        if (enableHardwareAcceleration && (key === \"x\" || key === \"y\" || key === \"z\"))\n          continue;\n        const valueType = getValueType(key);\n        const valueAsType = getValueAsType(value, valueType);\n        result += `${translateAlias[key] || key}(${valueAsType}) `;\n      }\n      if (enableHardwareAcceleration && !hasHardwareAcceleration)\n        result += \"translateZ(0px) \";\n      transform.value = result.trim();\n    },\n    {\n      immediate: true,\n      deep: true\n    }\n  );\n  return {\n    state,\n    transform\n  };\n}\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst order = [\"perspective\", \"translate\", \"scale\", \"rotate\", \"skew\"];\nconst transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach((operationKey) => {\n  transformAxes.forEach((axesKey) => {\n    const key = operationKey + axesKey;\n    transformProps.push(key);\n  });\n});\nconst transformPropSet = new Set(transformProps);\nfunction isTransformProp(key) {\n  return transformPropSet.has(key);\n}\nconst transformOriginProps = /* @__PURE__ */ new Set([\"originX\", \"originY\", \"originZ\"]);\nfunction isTransformOriginProp(key) {\n  return transformOriginProps.has(key);\n}\nfunction splitValues(variant) {\n  const transform = {};\n  const style = {};\n  Object.entries(variant).forEach(([key, value]) => {\n    if (isTransformProp(key) || isTransformOriginProp(key))\n      transform[key] = value;\n    else\n      style[key] = value;\n  });\n  return { transform, style };\n}\nfunction variantToStyle(variant) {\n  const { transform: _transform, style: _style } = splitValues(variant);\n  const { transform } = reactiveTransform(_transform);\n  const { style } = reactiveStyle(_style);\n  if (transform.value)\n    style.value.transform = transform.value;\n  return style.value;\n}\nfunction useElementStyle(target, onInit) {\n  let _cache;\n  let _target;\n  const { state, style } = reactiveStyle();\n  usePermissiveTarget(target, (el) => {\n    _target = el;\n    for (const key of Object.keys(valueTypes)) {\n      if (el.style[key] === null || el.style[key] === \"\" || isTransformProp(key) || isTransformOriginProp(key))\n        continue;\n      state[key] = el.style[key];\n    }\n    if (_cache) {\n      Object.entries(_cache).forEach(([key, value]) => el.style[key] = value);\n    }\n    if (onInit)\n      onInit(state);\n  });\n  watch(\n    style,\n    (newVal) => {\n      if (!_target) {\n        _cache = newVal;\n        return;\n      }\n      for (const key in newVal)\n        _target.style[key] = newVal[key];\n    },\n    {\n      immediate: true\n    }\n  );\n  return {\n    style: state\n  };\n}\nfunction parseTransform(transform) {\n  const transforms = transform.trim().split(/\\) |\\)/);\n  if (transforms.length === 1)\n    return {};\n  const parseValues = (value) => {\n    if (value.endsWith(\"px\") || value.endsWith(\"deg\"))\n      return parseFloat(value);\n    if (isNaN(Number(value)))\n      return Number(value);\n    return value;\n  };\n  return transforms.reduce((acc, transform2) => {\n    if (!transform2)\n      return acc;\n    const [name, transformValue] = transform2.split(\"(\");\n    const valueArray = transformValue.split(\",\");\n    const values = valueArray.map((val) => {\n      return parseValues(val.endsWith(\")\") ? val.replace(\")\", \"\") : val.trim());\n    });\n    const value = values.length === 1 ? values[0] : values;\n    return {\n      ...acc,\n      [name]: value\n    };\n  }, {});\n}\nfunction stateFromTransform(state, transform) {\n  Object.entries(parseTransform(transform)).forEach(([key, value]) => {\n    const axes = [\"x\", \"y\", \"z\"];\n    if (key === \"translate3d\") {\n      if (value === 0) {\n        axes.forEach((axis) => state[axis] = 0);\n        return;\n      }\n      value.forEach((axisValue, index) => state[axes[index]] = axisValue);\n      return;\n    }\n    value = parseFloat(value);\n    if (key === \"translateX\") {\n      state.x = value;\n      return;\n    }\n    if (key === \"translateY\") {\n      state.y = value;\n      return;\n    }\n    if (key === \"translateZ\") {\n      state.z = value;\n      return;\n    }\n    state[key] = value;\n  });\n}\nfunction useElementTransform(target, onInit) {\n  let _cache;\n  let _target;\n  const { state, transform } = reactiveTransform();\n  usePermissiveTarget(target, (el) => {\n    _target = el;\n    if (el.style.transform)\n      stateFromTransform(state, el.style.transform);\n    if (_cache)\n      el.style.transform = _cache;\n    if (onInit)\n      onInit(state);\n  });\n  watch(\n    transform,\n    (newValue) => {\n      if (!_target) {\n        _cache = newValue;\n        return;\n      }\n      _target.style.transform = newValue;\n    },\n    {\n      immediate: true\n    }\n  );\n  return {\n    transform: state\n  };\n}\nfunction useMotionProperties(target, defaultValues) {\n  const motionProperties = reactive({});\n  const apply = (values) => Object.entries(values).forEach(([key, value]) => motionProperties[key] = value);\n  const { style } = useElementStyle(target, apply);\n  const { transform } = useElementTransform(target, apply);\n  watch(\n    motionProperties,\n    (newVal) => {\n      Object.entries(newVal).forEach(([key, value]) => {\n        const target2 = isTransformProp(key) ? transform : style;\n        if (target2[key] && target2[key] === value)\n          return;\n        target2[key] = value;\n      });\n    },\n    {\n      immediate: true,\n      deep: true\n    }\n  );\n  usePermissiveTarget(target, () => defaultValues && apply(defaultValues));\n  return {\n    motionProperties,\n    style,\n    transform\n  };\n}\nfunction useMotionVariants(variants = {}) {\n  const _variants = unref(variants);\n  const variant = ref();\n  const state = computed(() => {\n    if (!variant.value)\n      return;\n    return _variants[variant.value];\n  });\n  return {\n    state,\n    variant\n  };\n}\nfunction useMotion(target, variants = {}, options) {\n  const { motionProperties } = useMotionProperties(target);\n  const { variant, state } = useMotionVariants(variants);\n  const controls = useMotionControls(motionProperties, variants);\n  const instance = {\n    target,\n    variant,\n    variants,\n    state,\n    motionProperties,\n    ...controls\n  };\n  useMotionFeatures(instance, options);\n  return instance;\n}\nconst directivePropsKeys = [\"initial\", \"enter\", \"leave\", \"visible\", \"visible-once\", \"visibleOnce\", \"hovered\", \"tapped\", \"focused\", \"delay\"];\nfunction resolveVariants(node, variantsRef) {\n  const target = node.props ? node.props : node.data && node.data.attrs ? node.data.attrs : {};\n  if (target) {\n    if (target.variants && isObject(target.variants)) {\n      variantsRef.value = {\n        ...variantsRef.value,\n        ...target.variants\n      };\n    }\n    directivePropsKeys.forEach((key) => {\n      if (key === \"delay\") {\n        if (target && target[key] && typeof target[key] === \"number\") {\n          const delay = target[key];\n          if (variantsRef && variantsRef.value) {\n            if (variantsRef.value.enter) {\n              if (!variantsRef.value.enter.transition)\n                variantsRef.value.enter.transition = {};\n              variantsRef.value.enter.transition = {\n                delay,\n                ...variantsRef.value.enter.transition\n              };\n            }\n            if (variantsRef.value.visible) {\n              if (!variantsRef.value.visible.transition)\n                variantsRef.value.visible.transition = {};\n              variantsRef.value.visible.transition = {\n                delay,\n                ...variantsRef.value.visible.transition\n              };\n            }\n            if (variantsRef.value.visibleOnce) {\n              if (!variantsRef.value.visibleOnce.transition)\n                variantsRef.value.visibleOnce.transition = {};\n              variantsRef.value.visibleOnce.transition = {\n                delay,\n                ...variantsRef.value.visibleOnce.transition\n              };\n            }\n          }\n        }\n        return;\n      }\n      if (target && target[key] && isObject(target[key])) {\n        const prop = target[key];\n        if (key === \"visible-once\")\n          key = \"visibleOnce\";\n        variantsRef.value[key] = prop;\n      }\n    });\n  }\n}\nfunction directive(variants) {\n  const register = (el, binding, node) => {\n    const key = binding.value && typeof binding.value === \"string\" ? binding.value : node.key;\n    if (key && motionState[key])\n      motionState[key].stop();\n    const variantsRef = ref(variants || {});\n    if (typeof binding.value === \"object\")\n      variantsRef.value = binding.value;\n    resolveVariants(node, variantsRef);\n    const motionOptions = { eventListeners: true, lifeCycleHooks: true, syncVariants: true, visibilityHooks: false };\n    const motionInstance = useMotion(el, variantsRef, motionOptions);\n    el.motionInstance = motionInstance;\n    if (key)\n      motionState[key] = motionInstance;\n  };\n  const mounted = (el, binding, node) => {\n    el.motionInstance && registerVisibilityHooks(el.motionInstance);\n  };\n  return {\n    created: register,\n    mounted,\n    getSSRProps(binding, node) {\n      let { initial: bindingInitial } = binding.value || node && node?.props || {};\n      bindingInitial = unref(bindingInitial);\n      const initial = defu(variants?.initial || {}, bindingInitial || {});\n      if (!initial || Object.keys(initial).length === 0)\n        return;\n      const style = variantToStyle(initial);\n      return {\n        style\n      };\n    }\n  };\n}\nconst fade = {\n  initial: {\n    opacity: 0\n  },\n  enter: {\n    opacity: 1\n  }\n};\nconst fadeVisible = {\n  initial: {\n    opacity: 0\n  },\n  visible: {\n    opacity: 1\n  }\n};\nconst fadeVisibleOnce = {\n  initial: {\n    opacity: 0\n  },\n  visibleOnce: {\n    opacity: 1\n  }\n};\nconst pop = {\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  enter: {\n    scale: 1,\n    opacity: 1\n  }\n};\nconst popVisible = {\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  visible: {\n    scale: 1,\n    opacity: 1\n  }\n};\nconst popVisibleOnce = {\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  visibleOnce: {\n    scale: 1,\n    opacity: 1\n  }\n};\nconst rollLeft = {\n  initial: {\n    x: -100,\n    rotate: 90,\n    opacity: 0\n  },\n  enter: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleLeft = {\n  initial: {\n    x: -100,\n    rotate: 90,\n    opacity: 0\n  },\n  visible: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleOnceLeft = {\n  initial: {\n    x: -100,\n    rotate: 90,\n    opacity: 0\n  },\n  visibleOnce: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollRight = {\n  initial: {\n    x: 100,\n    rotate: -90,\n    opacity: 0\n  },\n  enter: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleRight = {\n  initial: {\n    x: 100,\n    rotate: -90,\n    opacity: 0\n  },\n  visible: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleOnceRight = {\n  initial: {\n    x: 100,\n    rotate: -90,\n    opacity: 0\n  },\n  visibleOnce: {\n    x: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollTop = {\n  initial: {\n    y: -100,\n    rotate: -90,\n    opacity: 0\n  },\n  enter: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleTop = {\n  initial: {\n    y: -100,\n    rotate: -90,\n    opacity: 0\n  },\n  visible: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleOnceTop = {\n  initial: {\n    y: -100,\n    rotate: -90,\n    opacity: 0\n  },\n  visibleOnce: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollBottom = {\n  initial: {\n    y: 100,\n    rotate: 90,\n    opacity: 0\n  },\n  enter: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleBottom = {\n  initial: {\n    y: 100,\n    rotate: 90,\n    opacity: 0\n  },\n  visible: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst rollVisibleOnceBottom = {\n  initial: {\n    y: 100,\n    rotate: 90,\n    opacity: 0\n  },\n  visibleOnce: {\n    y: 0,\n    rotate: 0,\n    opacity: 1\n  }\n};\nconst slideLeft = {\n  initial: {\n    x: -100,\n    opacity: 0\n  },\n  enter: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleLeft = {\n  initial: {\n    x: -100,\n    opacity: 0\n  },\n  visible: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleOnceLeft = {\n  initial: {\n    x: -100,\n    opacity: 0\n  },\n  visibleOnce: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideRight = {\n  initial: {\n    x: 100,\n    opacity: 0\n  },\n  enter: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleRight = {\n  initial: {\n    x: 100,\n    opacity: 0\n  },\n  visible: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleOnceRight = {\n  initial: {\n    x: 100,\n    opacity: 0\n  },\n  visibleOnce: {\n    x: 0,\n    opacity: 1\n  }\n};\nconst slideTop = {\n  initial: {\n    y: -100,\n    opacity: 0\n  },\n  enter: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleTop = {\n  initial: {\n    y: -100,\n    opacity: 0\n  },\n  visible: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleOnceTop = {\n  initial: {\n    y: -100,\n    opacity: 0\n  },\n  visibleOnce: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideBottom = {\n  initial: {\n    y: 100,\n    opacity: 0\n  },\n  enter: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleBottom = {\n  initial: {\n    y: 100,\n    opacity: 0\n  },\n  visible: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst slideVisibleOnceBottom = {\n  initial: {\n    y: 100,\n    opacity: 0\n  },\n  visibleOnce: {\n    y: 0,\n    opacity: 1\n  }\n};\nconst presets = {\n  __proto__: null,\n  fade,\n  fadeVisible,\n  fadeVisibleOnce,\n  pop,\n  popVisible,\n  popVisibleOnce,\n  rollBottom,\n  rollLeft,\n  rollRight,\n  rollTop,\n  rollVisibleBottom,\n  rollVisibleLeft,\n  rollVisibleOnceBottom,\n  rollVisibleOnceLeft,\n  rollVisibleOnceRight,\n  rollVisibleOnceTop,\n  rollVisibleRight,\n  rollVisibleTop,\n  slideBottom,\n  slideLeft,\n  slideRight,\n  slideTop,\n  slideVisibleBottom,\n  slideVisibleLeft,\n  slideVisibleOnceBottom,\n  slideVisibleOnceLeft,\n  slideVisibleOnceRight,\n  slideVisibleOnceTop,\n  slideVisibleRight,\n  slideVisibleTop\n};\nconst component = defineComponent({\n  props: {\n    is: {\n      type: [String, Object],\n      required: false\n    },\n    // Preset to be loaded\n    preset: {\n      type: String,\n      required: false\n    },\n    // Instance\n    instance: {\n      type: Object,\n      required: false\n    },\n    // Variants\n    variants: {\n      type: Object,\n      required: false\n    },\n    // Initial variant\n    initial: {\n      type: Object,\n      required: false\n    },\n    // Lifecycle hooks variants\n    enter: {\n      type: Object,\n      required: false\n    },\n    leave: {\n      type: Object,\n      required: false\n    },\n    // Intersection observer variants\n    visible: {\n      type: Object,\n      required: false\n    },\n    visibleOnce: {\n      type: Object,\n      required: false\n    },\n    // Event listeners variants\n    hovered: {\n      type: Object,\n      required: false\n    },\n    tapped: {\n      type: Object,\n      required: false\n    },\n    focused: {\n      type: Object,\n      required: false\n    },\n    // Helpers\n    delay: {\n      type: [Number, String],\n      required: false\n    }\n  },\n  setup(props) {\n    const slots = useSlots();\n    const instances = reactive({});\n    if (!props.is && !slots.default)\n      return () => h(\"div\", {});\n    const _preset = computed(() => {\n      let preset;\n      if (props.preset)\n        preset = presets[props.preset];\n      return preset;\n    });\n    const propsConfig = computed(() => ({\n      initial: props.initial,\n      enter: props.enter,\n      leave: props.leave,\n      visible: props.visible,\n      visibleOnce: props.visibleOnce,\n      hovered: props.hovered,\n      tapped: props.tapped,\n      focused: props.focused\n    }));\n    const motionConfig = computed(() => {\n      const config = {\n        ...propsConfig.value,\n        ..._preset.value || {},\n        ...props.variants || {}\n      };\n      if (props.delay) {\n        config.enter.transition = { ...config.enter.transition };\n        config.enter.transition.delay = parseInt(props.delay);\n      }\n      return config;\n    });\n    const component2 = computed(() => {\n      if (!props.is)\n        return;\n      let comp = props.is;\n      if (typeof component2.value === \"string\" && !isHTMLTag(comp)) {\n        comp = resolveComponent(comp);\n      }\n      return comp;\n    });\n    if (process?.env?.NODE_ENV === \"development\" || false) {\n      const replayAnimation = (instance) => {\n        if (instance.variants?.initial)\n          instance.set(\"initial\");\n        setTimeout(() => {\n          if (instance.variants?.enter)\n            instance.apply(\"enter\");\n          if (instance.variants?.visible)\n            instance.apply(\"visible\");\n          if (instance.variants?.visibleOnce)\n            instance.apply(\"visibleOnce\");\n        }, 10);\n      };\n      onUpdated(() => Object.entries(instances).forEach(([_, value]) => replayAnimation(value)));\n    }\n    return {\n      slots,\n      component: component2,\n      motionConfig,\n      instances\n    };\n  },\n  render({ slots, motionConfig, instances, component: component2 }) {\n    const style = variantToStyle(motionConfig.initial || {});\n    const setNode = (node, index) => {\n      if (!node.props)\n        node.props = {};\n      node.props.style = style;\n      node.props.onVnodeMounted = ({ el }) => {\n        const instance = useMotion(el, motionConfig);\n        instances[index] = instance;\n      };\n      return node;\n    };\n    if (component2) {\n      const node = h(component2, void 0, slots);\n      setNode(node, 0);\n      return node;\n    }\n    const nodes = slots.default?.() || [];\n    return nodes.map((node, index) => setNode(node, index));\n  }\n});\nfunction slugify(string) {\n  const a = \"àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;\";\n  const b = \"aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------\";\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\n  return string.toString().replace(/[A-Z]/g, (s) => `-${s}`).toLowerCase().replace(/\\s+/g, \"-\").replace(p, (c) => b.charAt(a.indexOf(c))).replace(/&/g, \"-and-\").replace(/[^\\w\\-]+/g, \"\").replace(/\\-\\-+/g, \"-\").replace(/^-+/, \"\").replace(/-+$/, \"\");\n}\nconst MotionPlugin = {\n  install(app, options) {\n    app.directive(\"motion\", directive());\n    app.component(\"Motion\", component);\n    if (!options || options && !options.excludePresets) {\n      for (const key in presets) {\n        const preset = presets[key];\n        app.directive(`motion-${slugify(key)}`, directive(preset));\n      }\n    }\n    if (options && options.directives) {\n      for (const key in options.directives) {\n        const variants = options.directives[key];\n        if (!variants.initial && __DEV__) {\n          console.warn(`Your directive v-motion-${key} is missing initial variant!`);\n        }\n        app.directive(`motion-${key}`, directive(variants));\n      }\n    }\n  }\n};\nfunction isMotionInstance(obj) {\n  const _obj = obj;\n  return _obj.apply !== void 0 && typeof _obj.apply === \"function\" && _obj.set !== void 0 && typeof _obj.set === \"function\" && _obj.target !== void 0 && isRef(_obj.target);\n}\nfunction useMotions() {\n  return motionState;\n}\nfunction useSpring(values, spring) {\n  const { stop, get } = useMotionValues();\n  return {\n    values,\n    stop,\n    set: (properties) => Promise.all(\n      Object.entries(properties).map(([key, value]) => {\n        const motionValue = get(key, values[key], values);\n        return motionValue.start((onComplete) => {\n          const options = {\n            type: \"spring\",\n            ...spring || getDefaultTransition(key, value)\n          };\n          return animate({\n            from: motionValue.get(),\n            to: value,\n            velocity: motionValue.getVelocity(),\n            onUpdate: (v) => motionValue.set(v),\n            onComplete,\n            ...options\n          });\n        });\n      })\n    )\n  };\n}\nfunction useReducedMotion(options = {}) {\n  return useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n}\nexport { directive as MotionDirective, MotionPlugin, fade, fadeVisible, fadeVisibleOnce, isMotionInstance, pop, popVisible, popVisibleOnce, reactiveStyle, reactiveTransform, rollBottom, rollLeft, rollRight, rollTop, rollVisibleBottom, rollVisibleLeft, rollVisibleOnceBottom, rollVisibleOnceLeft, rollVisibleOnceRight, rollVisibleOnceTop, rollVisibleRight, rollVisibleTop, slideBottom, slideLeft, slideRight, slideTop, slideVisibleBottom, slideVisibleLeft, slideVisibleOnceBottom, slideVisibleOnceLeft, slideVisibleOnceRight, slideVisibleOnceTop, slideVisibleRight, slideVisibleTop, slugify, useElementStyle, useElementTransform, useMotion, useMotionControls, useMotionProperties, useMotionTransitions, useMotionVariants, useMotions, useReducedMotion, useSpring };\n",
      "start": 1713208777152,
      "end": 1713208777209,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/home/yalnguembu/Perso/quonte/node_modules/@vueuse/motion/dist/index.mjs\"],\n  \"sourcesContent\": [\"import defu from 'defu';\\nimport { ref, unref, watch, computed, reactive, defineComponent, useSlots, h, resolveComponent, onUpdated, isRef } from 'vue';\\nimport { isObject, useEventListener, useIntersectionObserver, unrefElement, useMediaQuery } from '@vueuse/core';\\nimport { tryOnUnmounted } from '@vueuse/shared';\\nimport sync, { getFrameData } from 'framesync';\\nimport { velocityPerSecond, inertia, animate, cubicBezier, linear, easeIn, easeInOut, easeOut, circIn, circInOut, circOut, backIn, backInOut, backOut, anticipate, bounceIn, bounceInOut, bounceOut } from 'popmotion';\\nimport { number, color, px, degrees, scale, alpha, progressPercentage, filter, complex } from 'style-value-types';\\nimport { isHTMLTag } from '@vue/shared';\\n\\nconst motionState = {};\\n\\nvar __defProp$1 = Object.defineProperty;\\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\\nvar __publicField$1 = (obj, key, value) => {\\n  __defNormalProp$1(obj, typeof key !== \\\"symbol\\\" ? key + \\\"\\\" : key, value);\\n  return value;\\n};\\nclass SubscriptionManager {\\n  constructor() {\\n    __publicField$1(this, \\\"subscriptions\\\", /* @__PURE__ */ new Set());\\n  }\\n  add(handler) {\\n    this.subscriptions.add(handler);\\n    return () => this.subscriptions.delete(handler);\\n  }\\n  notify(a, b, c) {\\n    if (!this.subscriptions.size)\\n      return;\\n    for (const handler of this.subscriptions)\\n      handler(a, b, c);\\n  }\\n  clear() {\\n    this.subscriptions.clear();\\n  }\\n}\\n\\nvar __defProp = Object.defineProperty;\\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\\nvar __publicField = (obj, key, value) => {\\n  __defNormalProp(obj, typeof key !== \\\"symbol\\\" ? key + \\\"\\\" : key, value);\\n  return value;\\n};\\nfunction isFloat(value) {\\n  return !isNaN(parseFloat(value));\\n}\\nclass MotionValue {\\n  /**\\n   * @param init - The initiating value\\n   * @param config - Optional configuration options\\n   */\\n  constructor(init) {\\n    /**\\n     * The current state of the `MotionValue`.\\n     */\\n    __publicField(this, \\\"current\\\");\\n    /**\\n     * The previous state of the `MotionValue`.\\n     */\\n    __publicField(this, \\\"prev\\\");\\n    /**\\n     * Duration, in milliseconds, since last updating frame.\\n     */\\n    __publicField(this, \\\"timeDelta\\\", 0);\\n    /**\\n     * Timestamp of the last time this `MotionValue` was updated.\\n     */\\n    __publicField(this, \\\"lastUpdated\\\", 0);\\n    /**\\n     * Functions to notify when the `MotionValue` updates.\\n     */\\n    __publicField(this, \\\"updateSubscribers\\\", new SubscriptionManager());\\n    /**\\n     * A reference to the currently-controlling Popmotion animation\\n     */\\n    __publicField(this, \\\"stopAnimation\\\");\\n    /**\\n     * Tracks whether this value can output a velocity.\\n     */\\n    __publicField(this, \\\"canTrackVelocity\\\", false);\\n    /**\\n     * Update and notify `MotionValue` subscribers.\\n     *\\n     * @param v\\n     * @param render\\n     */\\n    __publicField(this, \\\"updateAndNotify\\\", (v) => {\\n      this.prev = this.current;\\n      this.current = v;\\n      const { delta, timestamp } = getFrameData();\\n      if (this.lastUpdated !== timestamp) {\\n        this.timeDelta = delta;\\n        this.lastUpdated = timestamp;\\n      }\\n      sync.postRender(this.scheduleVelocityCheck);\\n      this.updateSubscribers.notify(this.current);\\n    });\\n    /**\\n     * Schedule a velocity check for the next frame.\\n     */\\n    __publicField(this, \\\"scheduleVelocityCheck\\\", () => sync.postRender(this.velocityCheck));\\n    /**\\n     * Updates `prev` with `current` if the value hasn't been updated this frame.\\n     * This ensures velocity calculations return `0`.\\n     */\\n    __publicField(this, \\\"velocityCheck\\\", ({ timestamp }) => {\\n      if (!this.canTrackVelocity)\\n        this.canTrackVelocity = isFloat(this.current);\\n      if (timestamp !== this.lastUpdated)\\n        this.prev = this.current;\\n    });\\n    this.prev = this.current = init;\\n    this.canTrackVelocity = isFloat(this.current);\\n  }\\n  /**\\n   * Adds a function that will be notified when the `MotionValue` is updated.\\n   *\\n   * It returns a function that, when called, will cancel the subscription.\\n   */\\n  onChange(subscription) {\\n    return this.updateSubscribers.add(subscription);\\n  }\\n  clearListeners() {\\n    this.updateSubscribers.clear();\\n  }\\n  /**\\n   * Sets the state of the `MotionValue`.\\n   *\\n   * @param v\\n   * @param render\\n   */\\n  set(v) {\\n    this.updateAndNotify(v);\\n  }\\n  /**\\n   * Returns the latest state of `MotionValue`\\n   *\\n   * @returns - The latest state of `MotionValue`\\n   */\\n  get() {\\n    return this.current;\\n  }\\n  /**\\n   * Get previous value.\\n   *\\n   * @returns - The previous latest state of `MotionValue`\\n   */\\n  getPrevious() {\\n    return this.prev;\\n  }\\n  /**\\n   * Returns the latest velocity of `MotionValue`\\n   *\\n   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\\n   */\\n  getVelocity() {\\n    return this.canTrackVelocity ? velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;\\n  }\\n  /**\\n   * Registers a new animation to control this `MotionValue`. Only one\\n   * animation can drive a `MotionValue` at one time.\\n   */\\n  start(animation) {\\n    this.stop();\\n    return new Promise((resolve) => {\\n      const { stop } = animation(resolve);\\n      this.stopAnimation = stop;\\n    }).then(() => this.clearAnimation());\\n  }\\n  /**\\n   * Stop the currently active animation.\\n   */\\n  stop() {\\n    if (this.stopAnimation)\\n      this.stopAnimation();\\n    this.clearAnimation();\\n  }\\n  /**\\n   * Returns `true` if this value is currently animating.\\n   */\\n  isAnimating() {\\n    return !!this.stopAnimation;\\n  }\\n  /**\\n   * Clear the current animation reference.\\n   */\\n  clearAnimation() {\\n    this.stopAnimation = null;\\n  }\\n  /**\\n   * Destroy and clean up subscribers to this `MotionValue`.\\n   */\\n  destroy() {\\n    this.updateSubscribers.clear();\\n    this.stop();\\n  }\\n}\\nfunction getMotionValue(init) {\\n  return new MotionValue(init);\\n}\\n\\nconst { isArray } = Array;\\nfunction useMotionValues() {\\n  const motionValues = ref({});\\n  const stop = (keys) => {\\n    const destroyKey = (key) => {\\n      if (!motionValues.value[key])\\n        return;\\n      motionValues.value[key].stop();\\n      motionValues.value[key].destroy();\\n      delete motionValues.value[key];\\n    };\\n    if (keys) {\\n      if (isArray(keys)) {\\n        keys.forEach(destroyKey);\\n      } else {\\n        destroyKey(keys);\\n      }\\n    } else {\\n      Object.keys(motionValues.value).forEach(destroyKey);\\n    }\\n  };\\n  const get = (key, from, target) => {\\n    if (motionValues.value[key])\\n      return motionValues.value[key];\\n    const motionValue = getMotionValue(from);\\n    motionValue.onChange((v) => target[key] = v);\\n    motionValues.value[key] = motionValue;\\n    return motionValue;\\n  };\\n  tryOnUnmounted(stop);\\n  return {\\n    motionValues,\\n    get,\\n    stop\\n  };\\n}\\n\\nfunction isKeyframesTarget(v) {\\n  return Array.isArray(v);\\n}\\nfunction underDampedSpring() {\\n  return {\\n    type: \\\"spring\\\",\\n    stiffness: 500,\\n    damping: 25,\\n    restDelta: 0.5,\\n    restSpeed: 10\\n  };\\n}\\nfunction criticallyDampedSpring(to) {\\n  return {\\n    type: \\\"spring\\\",\\n    stiffness: 550,\\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\\n    restDelta: 0.01,\\n    restSpeed: 10\\n  };\\n}\\nfunction overDampedSpring(to) {\\n  return {\\n    type: \\\"spring\\\",\\n    stiffness: 550,\\n    damping: to === 0 ? 100 : 30,\\n    restDelta: 0.01,\\n    restSpeed: 10\\n  };\\n}\\nfunction linearTween() {\\n  return {\\n    type: \\\"keyframes\\\",\\n    ease: \\\"linear\\\",\\n    duration: 300\\n  };\\n}\\nfunction keyframes(values) {\\n  return {\\n    type: \\\"keyframes\\\",\\n    duration: 800,\\n    values\\n  };\\n}\\nconst defaultTransitions = {\\n  default: overDampedSpring,\\n  x: underDampedSpring,\\n  y: underDampedSpring,\\n  z: underDampedSpring,\\n  rotate: underDampedSpring,\\n  rotateX: underDampedSpring,\\n  rotateY: underDampedSpring,\\n  rotateZ: underDampedSpring,\\n  scaleX: criticallyDampedSpring,\\n  scaleY: criticallyDampedSpring,\\n  scale: criticallyDampedSpring,\\n  backgroundColor: linearTween,\\n  color: linearTween,\\n  opacity: linearTween\\n};\\nfunction getDefaultTransition(valueKey, to) {\\n  let transitionFactory;\\n  if (isKeyframesTarget(to)) {\\n    transitionFactory = keyframes;\\n  } else {\\n    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;\\n  }\\n  return { to, ...transitionFactory(to) };\\n}\\n\\nconst int = {\\n  ...number,\\n  transform: Math.round\\n};\\nconst valueTypes = {\\n  // Color props\\n  color,\\n  backgroundColor: color,\\n  outlineColor: color,\\n  fill: color,\\n  stroke: color,\\n  // Border props\\n  borderColor: color,\\n  borderTopColor: color,\\n  borderRightColor: color,\\n  borderBottomColor: color,\\n  borderLeftColor: color,\\n  borderWidth: px,\\n  borderTopWidth: px,\\n  borderRightWidth: px,\\n  borderBottomWidth: px,\\n  borderLeftWidth: px,\\n  borderRadius: px,\\n  radius: px,\\n  borderTopLeftRadius: px,\\n  borderTopRightRadius: px,\\n  borderBottomRightRadius: px,\\n  borderBottomLeftRadius: px,\\n  // Positioning props\\n  width: px,\\n  maxWidth: px,\\n  height: px,\\n  maxHeight: px,\\n  size: px,\\n  top: px,\\n  right: px,\\n  bottom: px,\\n  left: px,\\n  // Spacing props\\n  padding: px,\\n  paddingTop: px,\\n  paddingRight: px,\\n  paddingBottom: px,\\n  paddingLeft: px,\\n  margin: px,\\n  marginTop: px,\\n  marginRight: px,\\n  marginBottom: px,\\n  marginLeft: px,\\n  // Transform props\\n  rotate: degrees,\\n  rotateX: degrees,\\n  rotateY: degrees,\\n  rotateZ: degrees,\\n  scale,\\n  scaleX: scale,\\n  scaleY: scale,\\n  scaleZ: scale,\\n  skew: degrees,\\n  skewX: degrees,\\n  skewY: degrees,\\n  distance: px,\\n  translateX: px,\\n  translateY: px,\\n  translateZ: px,\\n  x: px,\\n  y: px,\\n  z: px,\\n  perspective: px,\\n  transformPerspective: px,\\n  opacity: alpha,\\n  originX: progressPercentage,\\n  originY: progressPercentage,\\n  originZ: px,\\n  // Misc\\n  zIndex: int,\\n  filter,\\n  WebkitFilter: filter,\\n  // SVG\\n  fillOpacity: alpha,\\n  strokeOpacity: alpha,\\n  numOctaves: int\\n};\\nconst getValueType = (key) => valueTypes[key];\\nfunction getValueAsType(value, type) {\\n  return type && typeof value === \\\"number\\\" && type.transform ? type.transform(value) : value;\\n}\\nfunction getAnimatableNone(key, value) {\\n  let defaultValueType = getValueType(key);\\n  if (defaultValueType !== filter)\\n    defaultValueType = complex;\\n  return defaultValueType.getAnimatableNone ? defaultValueType.getAnimatableNone(value) : void 0;\\n}\\n\\nconst easingLookup = {\\n  linear,\\n  easeIn,\\n  easeInOut,\\n  easeOut,\\n  circIn,\\n  circInOut,\\n  circOut,\\n  backIn,\\n  backInOut,\\n  backOut,\\n  anticipate,\\n  bounceIn,\\n  bounceInOut,\\n  bounceOut\\n};\\nfunction easingDefinitionToFunction(definition) {\\n  if (Array.isArray(definition)) {\\n    const [x1, y1, x2, y2] = definition;\\n    return cubicBezier(x1, y1, x2, y2);\\n  } else if (typeof definition === \\\"string\\\") {\\n    return easingLookup[definition];\\n  }\\n  return definition;\\n}\\nfunction isEasingArray(ease) {\\n  return Array.isArray(ease) && typeof ease[0] !== \\\"number\\\";\\n}\\nfunction isAnimatable(key, value) {\\n  if (key === \\\"zIndex\\\")\\n    return false;\\n  if (typeof value === \\\"number\\\" || Array.isArray(value))\\n    return true;\\n  if (typeof value === \\\"string\\\" && // It's animatable if we have a string\\n  complex.test(value) && // And it contains numbers and/or colors\\n  !value.startsWith(\\\"url(\\\"))\\n    return true;\\n  return false;\\n}\\nfunction hydrateKeyframes(options) {\\n  if (Array.isArray(options.to) && options.to[0] === null) {\\n    options.to = [...options.to];\\n    options.to[0] = options.from;\\n  }\\n  return options;\\n}\\nfunction convertTransitionToAnimationOptions({ ease, times, delay, ...transition }) {\\n  const options = { ...transition };\\n  if (times)\\n    options.offset = times;\\n  if (ease) {\\n    options.ease = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);\\n  }\\n  if (delay)\\n    options.elapsed = -delay;\\n  return options;\\n}\\nfunction getPopmotionAnimationOptions(transition, options, key) {\\n  if (Array.isArray(options.to)) {\\n    if (!transition.duration)\\n      transition.duration = 800;\\n  }\\n  hydrateKeyframes(options);\\n  if (!isTransitionDefined(transition)) {\\n    transition = {\\n      ...transition,\\n      ...getDefaultTransition(key, options.to)\\n    };\\n  }\\n  return {\\n    ...options,\\n    ...convertTransitionToAnimationOptions(transition)\\n  };\\n}\\nfunction isTransitionDefined({ delay, repeat, repeatType, repeatDelay, from, ...transition }) {\\n  return !!Object.keys(transition).length;\\n}\\nfunction getValueTransition(transition, key) {\\n  return transition[key] || transition.default || transition;\\n}\\nfunction getAnimation(key, value, target, transition, onComplete) {\\n  const valueTransition = getValueTransition(transition, key);\\n  let origin = valueTransition.from === null || valueTransition.from === void 0 ? value.get() : valueTransition.from;\\n  const isTargetAnimatable = isAnimatable(key, target);\\n  if (origin === \\\"none\\\" && isTargetAnimatable && typeof target === \\\"string\\\")\\n    origin = getAnimatableNone(key, target);\\n  const isOriginAnimatable = isAnimatable(key, origin);\\n  function start(complete) {\\n    const options = {\\n      from: origin,\\n      to: target,\\n      velocity: transition.velocity ? transition.velocity : value.getVelocity(),\\n      onUpdate: (v) => value.set(v)\\n    };\\n    return valueTransition.type === \\\"inertia\\\" || valueTransition.type === \\\"decay\\\" ? inertia({ ...options, ...valueTransition }) : animate({\\n      ...getPopmotionAnimationOptions(valueTransition, options, key),\\n      onUpdate: (v) => {\\n        options.onUpdate(v);\\n        if (valueTransition.onUpdate)\\n          valueTransition.onUpdate(v);\\n      },\\n      onComplete: () => {\\n        if (transition.onComplete)\\n          transition.onComplete();\\n        if (onComplete)\\n          onComplete();\\n        if (complete)\\n          complete();\\n      }\\n    });\\n  }\\n  function set(complete) {\\n    value.set(target);\\n    if (transition.onComplete)\\n      transition.onComplete();\\n    if (onComplete)\\n      onComplete();\\n    if (complete)\\n      complete();\\n    return { stop: () => {\\n    } };\\n  }\\n  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set : start;\\n}\\n\\nfunction useMotionTransitions() {\\n  const { motionValues, stop, get } = useMotionValues();\\n  const push = (key, value, target, transition = {}, onComplete) => {\\n    const from = target[key];\\n    const motionValue = get(key, from, target);\\n    if (transition && transition.immediate) {\\n      motionValue.set(value);\\n      return;\\n    }\\n    const animation = getAnimation(key, motionValue, value, transition, onComplete);\\n    motionValue.start(animation);\\n  };\\n  return { motionValues, stop, push };\\n}\\n\\nfunction useMotionControls(motionProperties, variants = {}, { motionValues, push, stop } = useMotionTransitions()) {\\n  const _variants = unref(variants);\\n  const isAnimating = ref(false);\\n  watch(\\n    motionValues,\\n    (newVal) => {\\n      isAnimating.value = Object.values(newVal).filter((value) => value.isAnimating()).length > 0;\\n    },\\n    {\\n      immediate: true,\\n      deep: true\\n    }\\n  );\\n  const getVariantFromKey = (variant) => {\\n    if (!_variants || !_variants[variant])\\n      throw new Error(`The variant ${variant} does not exist.`);\\n    return _variants[variant];\\n  };\\n  const apply = (variant) => {\\n    if (typeof variant === \\\"string\\\")\\n      variant = getVariantFromKey(variant);\\n    return Promise.all(\\n      Object.entries(variant).map(([key, value]) => {\\n        if (key === \\\"transition\\\")\\n          return void 0;\\n        return new Promise(\\n          (resolve) => (\\n            // @ts-expect-error - Fix errors later for typescript 5\\n            push(key, value, motionProperties, variant.transition || getDefaultTransition(key, variant[key]), resolve)\\n          )\\n        );\\n      }).filter(Boolean)\\n    );\\n  };\\n  const set = (variant) => {\\n    const variantData = isObject(variant) ? variant : getVariantFromKey(variant);\\n    Object.entries(variantData).forEach(([key, value]) => {\\n      if (key === \\\"transition\\\")\\n        return;\\n      push(key, value, motionProperties, {\\n        immediate: true\\n      });\\n    });\\n  };\\n  const leave = async (done) => {\\n    let leaveVariant;\\n    if (_variants) {\\n      if (_variants.leave)\\n        leaveVariant = _variants.leave;\\n      if (!_variants.leave && _variants.initial)\\n        leaveVariant = _variants.initial;\\n    }\\n    if (!leaveVariant) {\\n      done();\\n      return;\\n    }\\n    await apply(leaveVariant);\\n    done();\\n  };\\n  return {\\n    isAnimating,\\n    apply,\\n    set,\\n    leave,\\n    stop\\n  };\\n}\\n\\nconst isBrowser = typeof window !== \\\"undefined\\\";\\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\\n\\nfunction registerEventListeners({ target, state, variants, apply }) {\\n  const _variants = unref(variants);\\n  const hovered = ref(false);\\n  const tapped = ref(false);\\n  const focused = ref(false);\\n  const mutableKeys = computed(() => {\\n    let result = [];\\n    if (!_variants)\\n      return result;\\n    if (_variants.hovered)\\n      result = [...result, ...Object.keys(_variants.hovered)];\\n    if (_variants.tapped)\\n      result = [...result, ...Object.keys(_variants.tapped)];\\n    if (_variants.focused)\\n      result = [...result, ...Object.keys(_variants.focused)];\\n    return result;\\n  });\\n  const computedProperties = computed(() => {\\n    const result = {};\\n    Object.assign(result, state.value);\\n    if (hovered.value && _variants.hovered)\\n      Object.assign(result, _variants.hovered);\\n    if (tapped.value && _variants.tapped)\\n      Object.assign(result, _variants.tapped);\\n    if (focused.value && _variants.focused)\\n      Object.assign(result, _variants.focused);\\n    for (const key in result) {\\n      if (!mutableKeys.value.includes(key))\\n        delete result[key];\\n    }\\n    return result;\\n  });\\n  if (_variants.hovered) {\\n    useEventListener(target, \\\"mouseenter\\\", () => hovered.value = true);\\n    useEventListener(target, \\\"mouseleave\\\", () => {\\n      hovered.value = false;\\n      tapped.value = false;\\n    });\\n    useEventListener(target, \\\"mouseout\\\", () => {\\n      hovered.value = false;\\n      tapped.value = false;\\n    });\\n  }\\n  if (_variants.tapped) {\\n    if (supportsMouseEvents()) {\\n      useEventListener(target, \\\"mousedown\\\", () => tapped.value = true);\\n      useEventListener(target, \\\"mouseup\\\", () => tapped.value = false);\\n    }\\n    if (supportsPointerEvents()) {\\n      useEventListener(target, \\\"pointerdown\\\", () => tapped.value = true);\\n      useEventListener(target, \\\"pointerup\\\", () => tapped.value = false);\\n    }\\n    if (supportsTouchEvents()) {\\n      useEventListener(target, \\\"touchstart\\\", () => tapped.value = true);\\n      useEventListener(target, \\\"touchend\\\", () => tapped.value = false);\\n    }\\n  }\\n  if (_variants.focused) {\\n    useEventListener(target, \\\"focus\\\", () => focused.value = true);\\n    useEventListener(target, \\\"blur\\\", () => focused.value = false);\\n  }\\n  watch(computedProperties, apply);\\n}\\n\\nfunction registerLifeCycleHooks({ set, target, variants, variant }) {\\n  const _variants = unref(variants);\\n  watch(\\n    () => target,\\n    () => {\\n      if (!_variants)\\n        return;\\n      if (_variants.initial)\\n        set(\\\"initial\\\");\\n      if (_variants.enter)\\n        variant.value = \\\"enter\\\";\\n    },\\n    {\\n      immediate: true,\\n      flush: \\\"pre\\\"\\n    }\\n  );\\n}\\n\\nfunction registerVariantsSync({ state, apply }) {\\n  watch(\\n    state,\\n    (newVal) => {\\n      if (newVal)\\n        apply(newVal);\\n    },\\n    {\\n      immediate: true\\n    }\\n  );\\n}\\n\\nfunction registerVisibilityHooks({ target, variants, variant }) {\\n  const _variants = unref(variants);\\n  if (_variants && (_variants.visible || _variants.visibleOnce)) {\\n    useIntersectionObserver(target, ([{ isIntersecting }]) => {\\n      if (_variants.visible) {\\n        if (isIntersecting)\\n          variant.value = \\\"visible\\\";\\n        else\\n          variant.value = \\\"initial\\\";\\n      } else if (_variants.visibleOnce) {\\n        if (isIntersecting && variant.value !== \\\"visibleOnce\\\")\\n          variant.value = \\\"visibleOnce\\\";\\n        else if (!variant.value)\\n          variant.value = \\\"initial\\\";\\n      }\\n    });\\n  }\\n}\\n\\nfunction useMotionFeatures(instance, options = {\\n  syncVariants: true,\\n  lifeCycleHooks: true,\\n  visibilityHooks: true,\\n  eventListeners: true\\n}) {\\n  if (options.lifeCycleHooks)\\n    registerLifeCycleHooks(instance);\\n  if (options.syncVariants)\\n    registerVariantsSync(instance);\\n  if (options.visibilityHooks)\\n    registerVisibilityHooks(instance);\\n  if (options.eventListeners)\\n    registerEventListeners(instance);\\n}\\n\\nfunction reactiveStyle(props = {}) {\\n  const state = reactive({\\n    ...props\\n  });\\n  const style = ref({});\\n  watch(\\n    state,\\n    () => {\\n      const result = {};\\n      for (const [key, value] of Object.entries(state)) {\\n        const valueType = getValueType(key);\\n        const valueAsType = getValueAsType(value, valueType);\\n        result[key] = valueAsType;\\n      }\\n      style.value = result;\\n    },\\n    {\\n      immediate: true,\\n      deep: true\\n    }\\n  );\\n  return {\\n    state,\\n    style\\n  };\\n}\\n\\nfunction usePermissiveTarget(target, onTarget) {\\n  watch(\\n    () => unrefElement(target),\\n    (el) => {\\n      if (!el)\\n        return;\\n      onTarget(el);\\n    },\\n    {\\n      immediate: true\\n    }\\n  );\\n}\\n\\nconst translateAlias = {\\n  x: \\\"translateX\\\",\\n  y: \\\"translateY\\\",\\n  z: \\\"translateZ\\\"\\n};\\nfunction reactiveTransform(props = {}, enableHardwareAcceleration = true) {\\n  const state = reactive({ ...props });\\n  const transform = ref(\\\"\\\");\\n  watch(\\n    state,\\n    (newVal) => {\\n      let result = \\\"\\\";\\n      let hasHardwareAcceleration = false;\\n      if (enableHardwareAcceleration && (newVal.x || newVal.y || newVal.z)) {\\n        const str = [newVal.x || 0, newVal.y || 0, newVal.z || 0].map(px.transform).join(\\\",\\\");\\n        result += `translate3d(${str}) `;\\n        hasHardwareAcceleration = true;\\n      }\\n      for (const [key, value] of Object.entries(newVal)) {\\n        if (enableHardwareAcceleration && (key === \\\"x\\\" || key === \\\"y\\\" || key === \\\"z\\\"))\\n          continue;\\n        const valueType = getValueType(key);\\n        const valueAsType = getValueAsType(value, valueType);\\n        result += `${translateAlias[key] || key}(${valueAsType}) `;\\n      }\\n      if (enableHardwareAcceleration && !hasHardwareAcceleration)\\n        result += \\\"translateZ(0px) \\\";\\n      transform.value = result.trim();\\n    },\\n    {\\n      immediate: true,\\n      deep: true\\n    }\\n  );\\n  return {\\n    state,\\n    transform\\n  };\\n}\\n\\nconst transformAxes = [\\\"\\\", \\\"X\\\", \\\"Y\\\", \\\"Z\\\"];\\nconst order = [\\\"perspective\\\", \\\"translate\\\", \\\"scale\\\", \\\"rotate\\\", \\\"skew\\\"];\\nconst transformProps = [\\\"transformPerspective\\\", \\\"x\\\", \\\"y\\\", \\\"z\\\"];\\norder.forEach((operationKey) => {\\n  transformAxes.forEach((axesKey) => {\\n    const key = operationKey + axesKey;\\n    transformProps.push(key);\\n  });\\n});\\nconst transformPropSet = new Set(transformProps);\\nfunction isTransformProp(key) {\\n  return transformPropSet.has(key);\\n}\\nconst transformOriginProps = /* @__PURE__ */ new Set([\\\"originX\\\", \\\"originY\\\", \\\"originZ\\\"]);\\nfunction isTransformOriginProp(key) {\\n  return transformOriginProps.has(key);\\n}\\nfunction splitValues(variant) {\\n  const transform = {};\\n  const style = {};\\n  Object.entries(variant).forEach(([key, value]) => {\\n    if (isTransformProp(key) || isTransformOriginProp(key))\\n      transform[key] = value;\\n    else\\n      style[key] = value;\\n  });\\n  return { transform, style };\\n}\\nfunction variantToStyle(variant) {\\n  const { transform: _transform, style: _style } = splitValues(variant);\\n  const { transform } = reactiveTransform(_transform);\\n  const { style } = reactiveStyle(_style);\\n  if (transform.value)\\n    style.value.transform = transform.value;\\n  return style.value;\\n}\\n\\nfunction useElementStyle(target, onInit) {\\n  let _cache;\\n  let _target;\\n  const { state, style } = reactiveStyle();\\n  usePermissiveTarget(target, (el) => {\\n    _target = el;\\n    for (const key of Object.keys(valueTypes)) {\\n      if (el.style[key] === null || el.style[key] === \\\"\\\" || isTransformProp(key) || isTransformOriginProp(key))\\n        continue;\\n      state[key] = el.style[key];\\n    }\\n    if (_cache) {\\n      Object.entries(_cache).forEach(([key, value]) => el.style[key] = value);\\n    }\\n    if (onInit)\\n      onInit(state);\\n  });\\n  watch(\\n    style,\\n    (newVal) => {\\n      if (!_target) {\\n        _cache = newVal;\\n        return;\\n      }\\n      for (const key in newVal)\\n        _target.style[key] = newVal[key];\\n    },\\n    {\\n      immediate: true\\n    }\\n  );\\n  return {\\n    style: state\\n  };\\n}\\n\\nfunction parseTransform(transform) {\\n  const transforms = transform.trim().split(/\\\\) |\\\\)/);\\n  if (transforms.length === 1)\\n    return {};\\n  const parseValues = (value) => {\\n    if (value.endsWith(\\\"px\\\") || value.endsWith(\\\"deg\\\"))\\n      return parseFloat(value);\\n    if (isNaN(Number(value)))\\n      return Number(value);\\n    return value;\\n  };\\n  return transforms.reduce((acc, transform2) => {\\n    if (!transform2)\\n      return acc;\\n    const [name, transformValue] = transform2.split(\\\"(\\\");\\n    const valueArray = transformValue.split(\\\",\\\");\\n    const values = valueArray.map((val) => {\\n      return parseValues(val.endsWith(\\\")\\\") ? val.replace(\\\")\\\", \\\"\\\") : val.trim());\\n    });\\n    const value = values.length === 1 ? values[0] : values;\\n    return {\\n      ...acc,\\n      [name]: value\\n    };\\n  }, {});\\n}\\nfunction stateFromTransform(state, transform) {\\n  Object.entries(parseTransform(transform)).forEach(([key, value]) => {\\n    const axes = [\\\"x\\\", \\\"y\\\", \\\"z\\\"];\\n    if (key === \\\"translate3d\\\") {\\n      if (value === 0) {\\n        axes.forEach((axis) => state[axis] = 0);\\n        return;\\n      }\\n      value.forEach((axisValue, index) => state[axes[index]] = axisValue);\\n      return;\\n    }\\n    value = parseFloat(value);\\n    if (key === \\\"translateX\\\") {\\n      state.x = value;\\n      return;\\n    }\\n    if (key === \\\"translateY\\\") {\\n      state.y = value;\\n      return;\\n    }\\n    if (key === \\\"translateZ\\\") {\\n      state.z = value;\\n      return;\\n    }\\n    state[key] = value;\\n  });\\n}\\n\\nfunction useElementTransform(target, onInit) {\\n  let _cache;\\n  let _target;\\n  const { state, transform } = reactiveTransform();\\n  usePermissiveTarget(target, (el) => {\\n    _target = el;\\n    if (el.style.transform)\\n      stateFromTransform(state, el.style.transform);\\n    if (_cache)\\n      el.style.transform = _cache;\\n    if (onInit)\\n      onInit(state);\\n  });\\n  watch(\\n    transform,\\n    (newValue) => {\\n      if (!_target) {\\n        _cache = newValue;\\n        return;\\n      }\\n      _target.style.transform = newValue;\\n    },\\n    {\\n      immediate: true\\n    }\\n  );\\n  return {\\n    transform: state\\n  };\\n}\\n\\nfunction useMotionProperties(target, defaultValues) {\\n  const motionProperties = reactive({});\\n  const apply = (values) => Object.entries(values).forEach(([key, value]) => motionProperties[key] = value);\\n  const { style } = useElementStyle(target, apply);\\n  const { transform } = useElementTransform(target, apply);\\n  watch(\\n    motionProperties,\\n    (newVal) => {\\n      Object.entries(newVal).forEach(([key, value]) => {\\n        const target2 = isTransformProp(key) ? transform : style;\\n        if (target2[key] && target2[key] === value)\\n          return;\\n        target2[key] = value;\\n      });\\n    },\\n    {\\n      immediate: true,\\n      deep: true\\n    }\\n  );\\n  usePermissiveTarget(target, () => defaultValues && apply(defaultValues));\\n  return {\\n    motionProperties,\\n    style,\\n    transform\\n  };\\n}\\n\\nfunction useMotionVariants(variants = {}) {\\n  const _variants = unref(variants);\\n  const variant = ref();\\n  const state = computed(() => {\\n    if (!variant.value)\\n      return;\\n    return _variants[variant.value];\\n  });\\n  return {\\n    state,\\n    variant\\n  };\\n}\\n\\nfunction useMotion(target, variants = {}, options) {\\n  const { motionProperties } = useMotionProperties(target);\\n  const { variant, state } = useMotionVariants(variants);\\n  const controls = useMotionControls(motionProperties, variants);\\n  const instance = {\\n    target,\\n    variant,\\n    variants,\\n    state,\\n    motionProperties,\\n    ...controls\\n  };\\n  useMotionFeatures(instance, options);\\n  return instance;\\n}\\n\\nconst directivePropsKeys = [\\\"initial\\\", \\\"enter\\\", \\\"leave\\\", \\\"visible\\\", \\\"visible-once\\\", \\\"visibleOnce\\\", \\\"hovered\\\", \\\"tapped\\\", \\\"focused\\\", \\\"delay\\\"];\\nfunction resolveVariants(node, variantsRef) {\\n  const target = node.props ? node.props : node.data && node.data.attrs ? node.data.attrs : {};\\n  if (target) {\\n    if (target.variants && isObject(target.variants)) {\\n      variantsRef.value = {\\n        ...variantsRef.value,\\n        ...target.variants\\n      };\\n    }\\n    directivePropsKeys.forEach((key) => {\\n      if (key === \\\"delay\\\") {\\n        if (target && target[key] && typeof target[key] === \\\"number\\\") {\\n          const delay = target[key];\\n          if (variantsRef && variantsRef.value) {\\n            if (variantsRef.value.enter) {\\n              if (!variantsRef.value.enter.transition)\\n                variantsRef.value.enter.transition = {};\\n              variantsRef.value.enter.transition = {\\n                delay,\\n                ...variantsRef.value.enter.transition\\n              };\\n            }\\n            if (variantsRef.value.visible) {\\n              if (!variantsRef.value.visible.transition)\\n                variantsRef.value.visible.transition = {};\\n              variantsRef.value.visible.transition = {\\n                delay,\\n                ...variantsRef.value.visible.transition\\n              };\\n            }\\n            if (variantsRef.value.visibleOnce) {\\n              if (!variantsRef.value.visibleOnce.transition)\\n                variantsRef.value.visibleOnce.transition = {};\\n              variantsRef.value.visibleOnce.transition = {\\n                delay,\\n                ...variantsRef.value.visibleOnce.transition\\n              };\\n            }\\n          }\\n        }\\n        return;\\n      }\\n      if (target && target[key] && isObject(target[key])) {\\n        const prop = target[key];\\n        if (key === \\\"visible-once\\\")\\n          key = \\\"visibleOnce\\\";\\n        variantsRef.value[key] = prop;\\n      }\\n    });\\n  }\\n}\\n\\nfunction directive(variants) {\\n  const register = (el, binding, node) => {\\n    const key = binding.value && typeof binding.value === \\\"string\\\" ? binding.value : node.key;\\n    if (key && motionState[key])\\n      motionState[key].stop();\\n    const variantsRef = ref(variants || {});\\n    if (typeof binding.value === \\\"object\\\")\\n      variantsRef.value = binding.value;\\n    resolveVariants(node, variantsRef);\\n    const motionOptions = { eventListeners: true, lifeCycleHooks: true, syncVariants: true, visibilityHooks: false };\\n    const motionInstance = useMotion(el, variantsRef, motionOptions);\\n    el.motionInstance = motionInstance;\\n    if (key)\\n      motionState[key] = motionInstance;\\n  };\\n  const mounted = (el, binding, node) => {\\n    el.motionInstance && registerVisibilityHooks(el.motionInstance);\\n  };\\n  return {\\n    created: register,\\n    mounted,\\n    getSSRProps(binding, node) {\\n      let { initial: bindingInitial } = binding.value || node && node?.props || {};\\n      bindingInitial = unref(bindingInitial);\\n      const initial = defu(variants?.initial || {}, bindingInitial || {});\\n      if (!initial || Object.keys(initial).length === 0)\\n        return;\\n      const style = variantToStyle(initial);\\n      return {\\n        style\\n      };\\n    }\\n  };\\n}\\n\\nconst fade = {\\n  initial: {\\n    opacity: 0\\n  },\\n  enter: {\\n    opacity: 1\\n  }\\n};\\nconst fadeVisible = {\\n  initial: {\\n    opacity: 0\\n  },\\n  visible: {\\n    opacity: 1\\n  }\\n};\\nconst fadeVisibleOnce = {\\n  initial: {\\n    opacity: 0\\n  },\\n  visibleOnce: {\\n    opacity: 1\\n  }\\n};\\n\\nconst pop = {\\n  initial: {\\n    scale: 0,\\n    opacity: 0\\n  },\\n  enter: {\\n    scale: 1,\\n    opacity: 1\\n  }\\n};\\nconst popVisible = {\\n  initial: {\\n    scale: 0,\\n    opacity: 0\\n  },\\n  visible: {\\n    scale: 1,\\n    opacity: 1\\n  }\\n};\\nconst popVisibleOnce = {\\n  initial: {\\n    scale: 0,\\n    opacity: 0\\n  },\\n  visibleOnce: {\\n    scale: 1,\\n    opacity: 1\\n  }\\n};\\n\\nconst rollLeft = {\\n  initial: {\\n    x: -100,\\n    rotate: 90,\\n    opacity: 0\\n  },\\n  enter: {\\n    x: 0,\\n    rotate: 0,\\n    opacity: 1\\n  }\\n};\\nconst rollVisibleLeft = {\\n  initial: {\\n    x: -100,\\n    rotate: 90,\\n    opacity: 0\\n  },\\n  visible: {\\n    x: 0,\\n    rotate: 0,\\n    opacity: 1\\n  }\\n};\\nconst rollVisibleOnceLeft = {\\n  initial: {\\n    x: -100,\\n    rotate: 90,\\n    opacity: 0\\n  },\\n  visibleOnce: {\\n    x: 0,\\n    rotate: 0,\\n    opacity: 1\\n  }\\n};\\nconst rollRight = {\\n  initial: {\\n    x: 100,\\n    rotate: -90,\\n    opacity: 0\\n  },\\n  enter: {\\n    x: 0,\\n    rotate: 0,\\n    opacity: 1\\n  }\\n};\\nconst rollVisibleRight = {\\n  initial: {\\n    x: 100,\\n    rotate: -90,\\n    opacity: 0\\n  },\\n  visible: {\\n    x: 0,\\n    rotate: 0,\\n    opacity: 1\\n  }\\n};\\nconst rollVisibleOnceRight = {\\n  initial: {\\n    x: 100,\\n    rotate: -90,\\n    opacity: 0\\n  },\\n  visibleOnce: {\\n    x: 0,\\n    rotate: 0,\\n    opacity: 1\\n  }\\n};\\nconst rollTop = {\\n  initial: {\\n    y: -100,\\n    rotate: -90,\\n    opacity: 0\\n  },\\n  enter: {\\n    y: 0,\\n    rotate: 0,\\n    opacity: 1\\n  }\\n};\\nconst rollVisibleTop = {\\n  initial: {\\n    y: -100,\\n    rotate: -90,\\n    opacity: 0\\n  },\\n  visible: {\\n    y: 0,\\n    rotate: 0,\\n    opacity: 1\\n  }\\n};\\nconst rollVisibleOnceTop = {\\n  initial: {\\n    y: -100,\\n    rotate: -90,\\n    opacity: 0\\n  },\\n  visibleOnce: {\\n    y: 0,\\n    rotate: 0,\\n    opacity: 1\\n  }\\n};\\nconst rollBottom = {\\n  initial: {\\n    y: 100,\\n    rotate: 90,\\n    opacity: 0\\n  },\\n  enter: {\\n    y: 0,\\n    rotate: 0,\\n    opacity: 1\\n  }\\n};\\nconst rollVisibleBottom = {\\n  initial: {\\n    y: 100,\\n    rotate: 90,\\n    opacity: 0\\n  },\\n  visible: {\\n    y: 0,\\n    rotate: 0,\\n    opacity: 1\\n  }\\n};\\nconst rollVisibleOnceBottom = {\\n  initial: {\\n    y: 100,\\n    rotate: 90,\\n    opacity: 0\\n  },\\n  visibleOnce: {\\n    y: 0,\\n    rotate: 0,\\n    opacity: 1\\n  }\\n};\\n\\nconst slideLeft = {\\n  initial: {\\n    x: -100,\\n    opacity: 0\\n  },\\n  enter: {\\n    x: 0,\\n    opacity: 1\\n  }\\n};\\nconst slideVisibleLeft = {\\n  initial: {\\n    x: -100,\\n    opacity: 0\\n  },\\n  visible: {\\n    x: 0,\\n    opacity: 1\\n  }\\n};\\nconst slideVisibleOnceLeft = {\\n  initial: {\\n    x: -100,\\n    opacity: 0\\n  },\\n  visibleOnce: {\\n    x: 0,\\n    opacity: 1\\n  }\\n};\\nconst slideRight = {\\n  initial: {\\n    x: 100,\\n    opacity: 0\\n  },\\n  enter: {\\n    x: 0,\\n    opacity: 1\\n  }\\n};\\nconst slideVisibleRight = {\\n  initial: {\\n    x: 100,\\n    opacity: 0\\n  },\\n  visible: {\\n    x: 0,\\n    opacity: 1\\n  }\\n};\\nconst slideVisibleOnceRight = {\\n  initial: {\\n    x: 100,\\n    opacity: 0\\n  },\\n  visibleOnce: {\\n    x: 0,\\n    opacity: 1\\n  }\\n};\\nconst slideTop = {\\n  initial: {\\n    y: -100,\\n    opacity: 0\\n  },\\n  enter: {\\n    y: 0,\\n    opacity: 1\\n  }\\n};\\nconst slideVisibleTop = {\\n  initial: {\\n    y: -100,\\n    opacity: 0\\n  },\\n  visible: {\\n    y: 0,\\n    opacity: 1\\n  }\\n};\\nconst slideVisibleOnceTop = {\\n  initial: {\\n    y: -100,\\n    opacity: 0\\n  },\\n  visibleOnce: {\\n    y: 0,\\n    opacity: 1\\n  }\\n};\\nconst slideBottom = {\\n  initial: {\\n    y: 100,\\n    opacity: 0\\n  },\\n  enter: {\\n    y: 0,\\n    opacity: 1\\n  }\\n};\\nconst slideVisibleBottom = {\\n  initial: {\\n    y: 100,\\n    opacity: 0\\n  },\\n  visible: {\\n    y: 0,\\n    opacity: 1\\n  }\\n};\\nconst slideVisibleOnceBottom = {\\n  initial: {\\n    y: 100,\\n    opacity: 0\\n  },\\n  visibleOnce: {\\n    y: 0,\\n    opacity: 1\\n  }\\n};\\n\\nconst presets = {\\n  __proto__: null,\\n  fade: fade,\\n  fadeVisible: fadeVisible,\\n  fadeVisibleOnce: fadeVisibleOnce,\\n  pop: pop,\\n  popVisible: popVisible,\\n  popVisibleOnce: popVisibleOnce,\\n  rollBottom: rollBottom,\\n  rollLeft: rollLeft,\\n  rollRight: rollRight,\\n  rollTop: rollTop,\\n  rollVisibleBottom: rollVisibleBottom,\\n  rollVisibleLeft: rollVisibleLeft,\\n  rollVisibleOnceBottom: rollVisibleOnceBottom,\\n  rollVisibleOnceLeft: rollVisibleOnceLeft,\\n  rollVisibleOnceRight: rollVisibleOnceRight,\\n  rollVisibleOnceTop: rollVisibleOnceTop,\\n  rollVisibleRight: rollVisibleRight,\\n  rollVisibleTop: rollVisibleTop,\\n  slideBottom: slideBottom,\\n  slideLeft: slideLeft,\\n  slideRight: slideRight,\\n  slideTop: slideTop,\\n  slideVisibleBottom: slideVisibleBottom,\\n  slideVisibleLeft: slideVisibleLeft,\\n  slideVisibleOnceBottom: slideVisibleOnceBottom,\\n  slideVisibleOnceLeft: slideVisibleOnceLeft,\\n  slideVisibleOnceRight: slideVisibleOnceRight,\\n  slideVisibleOnceTop: slideVisibleOnceTop,\\n  slideVisibleRight: slideVisibleRight,\\n  slideVisibleTop: slideVisibleTop\\n};\\n\\nconst component = defineComponent({\\n  props: {\\n    is: {\\n      type: [String, Object],\\n      required: false\\n    },\\n    // Preset to be loaded\\n    preset: {\\n      type: String,\\n      required: false\\n    },\\n    // Instance\\n    instance: {\\n      type: Object,\\n      required: false\\n    },\\n    // Variants\\n    variants: {\\n      type: Object,\\n      required: false\\n    },\\n    // Initial variant\\n    initial: {\\n      type: Object,\\n      required: false\\n    },\\n    // Lifecycle hooks variants\\n    enter: {\\n      type: Object,\\n      required: false\\n    },\\n    leave: {\\n      type: Object,\\n      required: false\\n    },\\n    // Intersection observer variants\\n    visible: {\\n      type: Object,\\n      required: false\\n    },\\n    visibleOnce: {\\n      type: Object,\\n      required: false\\n    },\\n    // Event listeners variants\\n    hovered: {\\n      type: Object,\\n      required: false\\n    },\\n    tapped: {\\n      type: Object,\\n      required: false\\n    },\\n    focused: {\\n      type: Object,\\n      required: false\\n    },\\n    // Helpers\\n    delay: {\\n      type: [Number, String],\\n      required: false\\n    }\\n  },\\n  setup(props) {\\n    const slots = useSlots();\\n    const instances = reactive({});\\n    if (!props.is && !slots.default)\\n      return () => h(\\\"div\\\", {});\\n    const _preset = computed(() => {\\n      let preset;\\n      if (props.preset)\\n        preset = presets[props.preset];\\n      return preset;\\n    });\\n    const propsConfig = computed(() => ({\\n      initial: props.initial,\\n      enter: props.enter,\\n      leave: props.leave,\\n      visible: props.visible,\\n      visibleOnce: props.visibleOnce,\\n      hovered: props.hovered,\\n      tapped: props.tapped,\\n      focused: props.focused\\n    }));\\n    const motionConfig = computed(() => {\\n      const config = {\\n        ...propsConfig.value,\\n        ..._preset.value || {},\\n        ...props.variants || {}\\n      };\\n      if (props.delay) {\\n        config.enter.transition = { ...config.enter.transition };\\n        config.enter.transition.delay = parseInt(props.delay);\\n      }\\n      return config;\\n    });\\n    const component = computed(() => {\\n      if (!props.is)\\n        return;\\n      let comp = props.is;\\n      if (typeof component.value === \\\"string\\\" && !isHTMLTag(comp)) {\\n        comp = resolveComponent(comp);\\n      }\\n      return comp;\\n    });\\n    if (process?.env?.NODE_ENV === \\\"development\\\" || process?.dev) {\\n      const replayAnimation = (instance) => {\\n        if (instance.variants?.initial)\\n          instance.set(\\\"initial\\\");\\n        setTimeout(() => {\\n          if (instance.variants?.enter)\\n            instance.apply(\\\"enter\\\");\\n          if (instance.variants?.visible)\\n            instance.apply(\\\"visible\\\");\\n          if (instance.variants?.visibleOnce)\\n            instance.apply(\\\"visibleOnce\\\");\\n        }, 10);\\n      };\\n      onUpdated(() => Object.entries(instances).forEach(([_, value]) => replayAnimation(value)));\\n    }\\n    return {\\n      slots,\\n      component,\\n      motionConfig,\\n      instances\\n    };\\n  },\\n  render({ slots, motionConfig, instances, component }) {\\n    const style = variantToStyle(motionConfig.initial || {});\\n    const setNode = (node, index) => {\\n      if (!node.props)\\n        node.props = {};\\n      node.props.style = style;\\n      node.props.onVnodeMounted = ({ el }) => {\\n        const instance = useMotion(el, motionConfig);\\n        instances[index] = instance;\\n      };\\n      return node;\\n    };\\n    if (component) {\\n      const node = h(component, void 0, slots);\\n      setNode(node, 0);\\n      return node;\\n    }\\n    const nodes = slots.default?.() || [];\\n    return nodes.map((node, index) => setNode(node, index));\\n  }\\n});\\n\\nfunction slugify(string) {\\n  const a = \\\"\\\\xE0\\\\xE1\\\\xE2\\\\xE4\\\\xE6\\\\xE3\\\\xE5\\\\u0101\\\\u0103\\\\u0105\\\\xE7\\\\u0107\\\\u010D\\\\u0111\\\\u010F\\\\xE8\\\\xE9\\\\xEA\\\\xEB\\\\u0113\\\\u0117\\\\u0119\\\\u011B\\\\u011F\\\\u01F5\\\\u1E27\\\\xEE\\\\xEF\\\\xED\\\\u012B\\\\u012F\\\\xEC\\\\u0142\\\\u1E3F\\\\xF1\\\\u0144\\\\u01F9\\\\u0148\\\\xF4\\\\xF6\\\\xF2\\\\xF3\\\\u0153\\\\xF8\\\\u014D\\\\xF5\\\\u0151\\\\u1E55\\\\u0155\\\\u0159\\\\xDF\\\\u015B\\\\u0161\\\\u015F\\\\u0219\\\\u0165\\\\u021B\\\\xFB\\\\xFC\\\\xF9\\\\xFA\\\\u016B\\\\u01D8\\\\u016F\\\\u0171\\\\u0173\\\\u1E83\\\\u1E8D\\\\xFF\\\\xFD\\\\u017E\\\\u017A\\\\u017C\\\\xB7/_,:;\\\";\\n  const b = \\\"aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------\\\";\\n  const p = new RegExp(a.split(\\\"\\\").join(\\\"|\\\"), \\\"g\\\");\\n  return string.toString().replace(/[A-Z]/g, (s) => `-${s}`).toLowerCase().replace(/\\\\s+/g, \\\"-\\\").replace(p, (c) => b.charAt(a.indexOf(c))).replace(/&/g, \\\"-and-\\\").replace(/[^\\\\w\\\\-]+/g, \\\"\\\").replace(/\\\\-\\\\-+/g, \\\"-\\\").replace(/^-+/, \\\"\\\").replace(/-+$/, \\\"\\\");\\n}\\n\\nconst MotionPlugin = {\\n  install(app, options) {\\n    app.directive(\\\"motion\\\", directive());\\n    app.component(\\\"Motion\\\", component);\\n    if (!options || options && !options.excludePresets) {\\n      for (const key in presets) {\\n        const preset = presets[key];\\n        app.directive(`motion-${slugify(key)}`, directive(preset));\\n      }\\n    }\\n    if (options && options.directives) {\\n      for (const key in options.directives) {\\n        const variants = options.directives[key];\\n        if (!variants.initial && __DEV__) {\\n          console.warn(`Your directive v-motion-${key} is missing initial variant!`);\\n        }\\n        app.directive(`motion-${key}`, directive(variants));\\n      }\\n    }\\n  }\\n};\\n\\nfunction isMotionInstance(obj) {\\n  const _obj = obj;\\n  return _obj.apply !== void 0 && typeof _obj.apply === \\\"function\\\" && _obj.set !== void 0 && typeof _obj.set === \\\"function\\\" && _obj.target !== void 0 && isRef(_obj.target);\\n}\\n\\nfunction useMotions() {\\n  return motionState;\\n}\\n\\nfunction useSpring(values, spring) {\\n  const { stop, get } = useMotionValues();\\n  return {\\n    values,\\n    stop,\\n    set: (properties) => Promise.all(\\n      Object.entries(properties).map(([key, value]) => {\\n        const motionValue = get(key, values[key], values);\\n        return motionValue.start((onComplete) => {\\n          const options = {\\n            type: \\\"spring\\\",\\n            ...spring || getDefaultTransition(key, value)\\n          };\\n          return animate({\\n            from: motionValue.get(),\\n            to: value,\\n            velocity: motionValue.getVelocity(),\\n            onUpdate: (v) => motionValue.set(v),\\n            onComplete,\\n            ...options\\n          });\\n        });\\n      })\\n    )\\n  };\\n}\\n\\nfunction useReducedMotion(options = {}) {\\n  return useMediaQuery(\\\"(prefers-reduced-motion: reduce)\\\", options);\\n}\\n\\nexport { directive as MotionDirective, MotionPlugin, fade, fadeVisible, fadeVisibleOnce, isMotionInstance, pop, popVisible, popVisibleOnce, reactiveStyle, reactiveTransform, rollBottom, rollLeft, rollRight, rollTop, rollVisibleBottom, rollVisibleLeft, rollVisibleOnceBottom, rollVisibleOnceLeft, rollVisibleOnceRight, rollVisibleOnceTop, rollVisibleRight, rollVisibleTop, slideBottom, slideLeft, slideRight, slideTop, slideVisibleBottom, slideVisibleLeft, slideVisibleOnceBottom, slideVisibleOnceLeft, slideVisibleOnceRight, slideVisibleOnceTop, slideVisibleRight, slideVisibleTop, slugify, useElementStyle, useElementTransform, useMotion, useMotionControls, useMotionProperties, useMotionTransitions, useMotionVariants, useMotions, useReducedMotion, useSpring };\\n\"],\n  \"mappings\": \"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\",\n  \"names\": [\"component\"]\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "post"
    },
    {
      "name": "unhead:remove-server-composables",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1713208777210,
      "end": 1713208777210,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713208777210,
      "end": 1713208777211,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713208777210,
      "end": 1713208777211,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713208777211,
      "end": 1713208777211,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713208777211,
      "end": 1713208777211,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713208777211,
      "end": 1713208777211,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713208777211,
      "end": 1713208777211,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1713208777211,
      "end": 1713208777211,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1713208777211,
      "end": 1713208777211,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1713208777211,
      "end": 1713208777212,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1713208777212,
      "end": 1713208777212,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1713208777212,
      "end": 1713208777212,
      "order": "normal"
    }
  ]
}
