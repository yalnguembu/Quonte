{
  "resolvedId": "/home/yalnguembu/Perso/quonte/node_modules/popmotion/dist/es/utils/mix-complex.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { isNum } from './inc.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = Object.assign(Object.assign({}, origin), target);\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numRGB = 0;\n    let numHSL = 0;\n    for (let i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            }\n            else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed, numNumbers, numRGB, numHSL };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numHSL === targetStats.numHSL &&\n        originStats.numRGB === targetStats.numRGB &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n",
      "start": 1713208770895,
      "end": 1713208770961,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1713208770962,
      "end": 1713208770962,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1713208770963,
      "end": 1713208770963,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1713208770964,
      "end": 1713208770964,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1713208770964,
      "end": 1713208770964,
      "order": "normal"
    }
  ]
}
