{
  "resolvedId": "/home/yalnguembu/Perso/quonte/node_modules/popmotion/dist/es/animations/generators/spring.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { __rest } from 'tslib';\nimport { findSpring, calcAngularFreq } from '../utils/find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = Object.assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring(_a) {\n    var { from = 0.0, to = 1.0, restSpeed = 2, restDelta } = _a, options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n",
      "start": 1713208770839,
      "end": 1713208770934,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1713208770934,
      "end": 1713208770934,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1713208770934,
      "end": 1713208770935,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1713208770935,
      "end": 1713208770935,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1713208770936,
      "end": 1713208770936,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1713208770936,
      "end": 1713208770936,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1713208770936,
      "end": 1713208770936,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1713208770936,
      "end": 1713208770936,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1713208770936,
      "end": 1713208770936,
      "order": "normal"
    }
  ]
}
