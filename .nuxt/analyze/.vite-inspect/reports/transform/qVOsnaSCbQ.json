{
  "resolvedId": "/home/yalnguembu/Perso/quonte/node_modules/axios/lib/helpers/validator.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n",
      "start": 1713208772584,
      "end": 1713208772638,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713208772638,
      "end": 1713208772639,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1713208772639,
      "end": 1713208772639,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1713208772639,
      "end": 1713208772640,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1713208772640,
      "end": 1713208772640,
      "order": "normal"
    }
  ]
}
