{
  "resolvedId": "/home/yalnguembu/Perso/quonte/services/core/CancelablePromise.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/* generated using openapi-typescript-codegen -- do not edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    #isResolved: boolean;\n    #isRejected: boolean;\n    #isCancelled: boolean;\n    readonly #cancelHandlers: (() => void)[];\n    readonly #promise: Promise<T>;\n    #resolve?: (value: T | PromiseLike<T>) => void;\n    #reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this.#isResolved = false;\n        this.#isRejected = false;\n        this.#isCancelled = false;\n        this.#cancelHandlers = [];\n        this.#promise = new Promise<T>((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isResolved = true;\n                if (this.#resolve) this.#resolve(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isRejected = true;\n                if (this.#reject) this.#reject(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this.#isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this.#isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this.#isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Cancellable Promise\";\n    }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this.#promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this.#promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n            return;\n        }\n        this.#isCancelled = true;\n        if (this.#cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this.#cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this.#cancelHandlers.length = 0;\n        if (this.#reject) this.#reject(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this.#isCancelled;\n    }\n}\n",
      "start": 1713208780134,
      "end": 1713208780206,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713208780206,
      "end": 1713208780206,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713208780206,
      "end": 1713208780206,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713208780206,
      "end": 1713208780207,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713208780206,
      "end": 1713208780207,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1713208780207,
      "end": 1713208780207,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1713208780207,
      "end": 1713208780207,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1713208780207,
      "end": 1713208780207,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1713208780207,
      "end": 1713208780207,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1713208780207,
      "end": 1713208780207,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1713208780207,
      "end": 1713208780207,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1713208780207,
      "end": 1713208780207,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "export class CancelError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"CancelError\";\n  }\n  get isCancelled() {\n    return true;\n  }\n}\nexport class CancelablePromise {\n  #isResolved;\n  #isRejected;\n  #isCancelled;\n  #cancelHandlers;\n  #promise;\n  #resolve;\n  #reject;\n  constructor(executor) {\n    this.#isResolved = false;\n    this.#isRejected = false;\n    this.#isCancelled = false;\n    this.#cancelHandlers = [];\n    this.#promise = new Promise((resolve, reject) => {\n      this.#resolve = resolve;\n      this.#reject = reject;\n      const onResolve = (value) => {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n          return;\n        }\n        this.#isResolved = true;\n        if (this.#resolve)\n          this.#resolve(value);\n      };\n      const onReject = (reason) => {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n          return;\n        }\n        this.#isRejected = true;\n        if (this.#reject)\n          this.#reject(reason);\n      };\n      const onCancel = (cancelHandler) => {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n          return;\n        }\n        this.#cancelHandlers.push(cancelHandler);\n      };\n      Object.defineProperty(onCancel, \"isResolved\", {\n        get: () => this.#isResolved\n      });\n      Object.defineProperty(onCancel, \"isRejected\", {\n        get: () => this.#isRejected\n      });\n      Object.defineProperty(onCancel, \"isCancelled\", {\n        get: () => this.#isCancelled\n      });\n      return executor(onResolve, onReject, onCancel);\n    });\n  }\n  get [Symbol.toStringTag]() {\n    return \"Cancellable Promise\";\n  }\n  then(onFulfilled, onRejected) {\n    return this.#promise.then(onFulfilled, onRejected);\n  }\n  catch(onRejected) {\n    return this.#promise.catch(onRejected);\n  }\n  finally(onFinally) {\n    return this.#promise.finally(onFinally);\n  }\n  cancel() {\n    if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n      return;\n    }\n    this.#isCancelled = true;\n    if (this.#cancelHandlers.length) {\n      try {\n        for (const cancelHandler of this.#cancelHandlers) {\n          cancelHandler();\n        }\n      } catch (error) {\n        console.warn(\"Cancellation threw an error\", error);\n        return;\n      }\n    }\n    this.#cancelHandlers.length = 0;\n    if (this.#reject)\n      this.#reject(new CancelError(\"Request aborted\"));\n  }\n  get isCancelled() {\n    return this.#isCancelled;\n  }\n}\n",
      "start": 1713208780207,
      "end": 1713208780218,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/yalnguembu/Perso/quonte/services/core/CancelablePromise.ts"
        ],
        "sourcesContent": [
          "/* generated using openapi-typescript-codegen -- do not edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    #isResolved: boolean;\n    #isRejected: boolean;\n    #isCancelled: boolean;\n    readonly #cancelHandlers: (() => void)[];\n    readonly #promise: Promise<T>;\n    #resolve?: (value: T | PromiseLike<T>) => void;\n    #reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this.#isResolved = false;\n        this.#isRejected = false;\n        this.#isCancelled = false;\n        this.#cancelHandlers = [];\n        this.#promise = new Promise<T>((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isResolved = true;\n                if (this.#resolve) this.#resolve(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isRejected = true;\n                if (this.#reject) this.#reject(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this.#isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this.#isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this.#isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Cancellable Promise\";\n    }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this.#promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this.#promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n            return;\n        }\n        this.#isCancelled = true;\n        if (this.#cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this.#cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this.#cancelHandlers.length = 0;\n        if (this.#reject) this.#reject(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this.#isCancelled;\n    }\n}\n"
        ],
        "mappings": "AAIO,aAAM,oBAAoB,MAAM;AAAA,EAEnC,YAAY,SAAiB;AACzB,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EAChB;AAAA,EAEA,IAAW,cAAuB;AAC9B,WAAO;AAAA,EACX;AACJ;AAUO,aAAM,kBAA2C;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,EACS;AAAA,EACA;AAAA,EACT;AAAA,EACA;AAAA,EAEA,YACI,UAKF;AACE,SAAK,cAAc;AACnB,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,kBAAkB,CAAC;AACxB,SAAK,WAAW,IAAI,QAAW,CAAC,SAAS,WAAW;AAChD,WAAK,WAAW;AAChB,WAAK,UAAU;AAEf,YAAM,YAAY,CAAC,UAAoC;AACnD,YAAI,KAAK,eAAe,KAAK,eAAe,KAAK,cAAc;AAC3D;AAAA,QACJ;AACA,aAAK,cAAc;AACnB,YAAI,KAAK;AAAU,eAAK,SAAS,KAAK;AAAA,MAC1C;AAEA,YAAM,WAAW,CAAC,WAAuB;AACrC,YAAI,KAAK,eAAe,KAAK,eAAe,KAAK,cAAc;AAC3D;AAAA,QACJ;AACA,aAAK,cAAc;AACnB,YAAI,KAAK;AAAS,eAAK,QAAQ,MAAM;AAAA,MACzC;AAEA,YAAM,WAAW,CAAC,kBAAoC;AAClD,YAAI,KAAK,eAAe,KAAK,eAAe,KAAK,cAAc;AAC3D;AAAA,QACJ;AACA,aAAK,gBAAgB,KAAK,aAAa;AAAA,MAC3C;AAEA,aAAO,eAAe,UAAU,cAAc;AAAA,QAC1C,KAAK,MAAe,KAAK;AAAA,MAC7B,CAAC;AAED,aAAO,eAAe,UAAU,cAAc;AAAA,QAC1C,KAAK,MAAe,KAAK;AAAA,MAC7B,CAAC;AAED,aAAO,eAAe,UAAU,eAAe;AAAA,QAC3C,KAAK,MAAe,KAAK;AAAA,MAC7B,CAAC;AAED,aAAO,SAAS,WAAW,UAAU,QAAoB;AAAA,IAC7D,CAAC;AAAA,EACL;AAAA,EAEA,KAAK,OAAO,WAAW,IAAI;AACvB,WAAO;AAAA,EACX;AAAA,EAEO,KACH,aACA,YAC4B;AAC5B,WAAO,KAAK,SAAS,KAAK,aAAa,UAAU;AAAA,EACrD;AAAA,EAEO,MACH,YACoB;AACpB,WAAO,KAAK,SAAS,MAAM,UAAU;AAAA,EACzC;AAAA,EAEO,QAAQ,WAA6C;AACxD,WAAO,KAAK,SAAS,QAAQ,SAAS;AAAA,EAC1C;AAAA,EAEO,SAAe;AAClB,QAAI,KAAK,eAAe,KAAK,eAAe,KAAK,cAAc;AAC3D;AAAA,IACJ;AACA,SAAK,eAAe;AACpB,QAAI,KAAK,gBAAgB,QAAQ;AAC7B,UAAI;AACA,mBAAW,iBAAiB,KAAK,iBAAiB;AAC9C,wBAAc;AAAA,QAClB;AAAA,MACJ,SAAS,OAAO;AACZ,gBAAQ,KAAK,+BAA+B,KAAK;AACjD;AAAA,MACJ;AAAA,IACJ;AACA,SAAK,gBAAgB,SAAS;AAC9B,QAAI,KAAK;AAAS,WAAK,QAAQ,IAAI,YAAY,iBAAiB,CAAC;AAAA,EACrE;AAAA,EAEA,IAAW,cAAuB;AAC9B,WAAO,KAAK;AAAA,EAChB;AACJ;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1713208780218,
      "end": 1713208780218,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1713208780218,
      "end": 1713208780218,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1713208780218,
      "end": 1713208780218,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1713208780218,
      "end": 1713208780218,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208780218,
      "end": 1713208780218,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208780218,
      "end": 1713208780218,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713208780218,
      "end": 1713208780218,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713208780218,
      "end": 1713208780218,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1713208780219,
      "end": 1713208780219,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208780219,
      "end": 1713208780219,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1713208780219,
      "end": 1713208780219,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1713208780219,
      "end": 1713208780220,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "post"
    },
    {
      "name": "unhead:remove-server-composables",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1713208780220,
      "end": 1713208780220,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713208780220,
      "end": 1713208780223,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713208780220,
      "end": 1713208780223,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713208780223,
      "end": 1713208780223,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713208780223,
      "end": 1713208780223,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713208780223,
      "end": 1713208780223,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713208780223,
      "end": 1713208780223,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1713208780224,
      "end": 1713208780224,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1713208780224,
      "end": 1713208780224,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1713208780224,
      "end": 1713208780224,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1713208780224,
      "end": 1713208780224,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1713208780224,
      "end": 1713208780224,
      "order": "normal"
    }
  ]
}
