{
  "resolvedId": "/home/yalnguembu/Perso/quonte/node_modules/nuxt-seo-experiments/dist/runtime/nuxt/plugins/1.absoluteImageUrls.server.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { injectHead } from \"@unhead/vue\";\nimport { createSitePathResolver, defineNuxtPlugin, unref } from \"#imports\";\nexport default defineNuxtPlugin({\n  enforce: \"post\",\n  setup() {\n    const head = injectHead();\n    if (!head)\n      return;\n    const resolver = createSitePathResolver({\n      withBase: true,\n      absolute: true,\n      canonical: true\n    });\n    head.use({\n      hooks: {\n        \"tags:resolve\": async ({ tags }) => {\n          for (const tag of tags) {\n            if (tag.tag !== \"meta\")\n              continue;\n            if (tag.props.property !== \"og:image:url\" && tag.props.property !== \"og:image\" && tag.props.name !== \"twitter:image\")\n              continue;\n            if (!tag.props.content || tag.props.content.startsWith(\"http\") || tag.props.content.startsWith(\"//\"))\n              continue;\n            tag.props.content = unref(resolver(tag.props.content));\n          }\n        }\n      }\n    });\n  }\n});\n",
      "start": 1713208776064,
      "end": 1713208776816,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1713208776816,
      "end": 1713208776816,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1713208776816,
      "end": 1713208776817,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1713208776817,
      "end": 1713208776817,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208776817,
      "end": 1713208776817,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208776817,
      "end": 1713208776817,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713208776817,
      "end": 1713208776817,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713208776817,
      "end": 1713208776817,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1713208776817,
      "end": 1713208776817,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208776817,
      "end": 1713208776818,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "post"
    },
    {
      "name": "unhead:remove-server-composables",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1713208776818,
      "end": 1713208776818,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { createSitePathResolver } from '/home/yalnguembu/Perso/quonte/node_modules/nuxt-site-config/dist/runtime/nuxt/composables/utils.mjs';\nimport { defineNuxtPlugin } from '#app/nuxt';\nimport { unref } from 'vue';\nimport { injectHead } from \"@unhead/vue\";\nexport default defineNuxtPlugin({\n  enforce: \"post\",\n  setup() {\n    const head = injectHead();\n    if (!head)\n      return;\n    const resolver = createSitePathResolver({\n      withBase: true,\n      absolute: true,\n      canonical: true\n    });\n    head.use({\n      hooks: {\n        \"tags:resolve\": async ({ tags }) => {\n          for (const tag of tags) {\n            if (tag.tag !== \"meta\")\n              continue;\n            if (tag.props.property !== \"og:image:url\" && tag.props.property !== \"og:image\" && tag.props.name !== \"twitter:image\")\n              continue;\n            if (!tag.props.content || tag.props.content.startsWith(\"http\") || tag.props.content.startsWith(\"//\"))\n              continue;\n            tag.props.content = unref(resolver(tag.props.content));\n          }\n        }\n      }\n    });\n  }\n});\n",
      "start": 1713208776818,
      "end": 1713208776819,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAEzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvjI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvjH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { createSitePathResolver } from '/home/yalnguembu/Perso/quonte/node_modules/nuxt-site-config/dist/runtime/nuxt/composables/utils.mjs';\nimport { defineNuxtPlugin } from '#app/nuxt';\nimport { unref } from 'vue';\nimport { injectHead } from \"@unhead/vue\";\nexport default defineNuxtPlugin({\n  enforce: \"post\",\n  setup() {\n    const head = injectHead();\n    if (!head)\n      return;\n    const resolver = createSitePathResolver({\n      withBase: true,\n      absolute: true,\n      canonical: true\n    });\n    head.use({\n      hooks: {\n        \"tags:resolve\": async ({ tags }) => {\n          for (const tag of tags) {\n            if (tag.tag !== \"meta\")\n              continue;\n            if (tag.props.property !== \"og:image:url\" && tag.props.property !== \"og:image\" && tag.props.name !== \"twitter:image\")\n              continue;\n            if (!tag.props.content || tag.props.content.startsWith(\"http\") || tag.props.content.startsWith(\"//\"))\n              continue;\n            tag.props.content = unref(resolver(tag.props.content));\n          }\n        }\n      }\n    });\n  }\n});\n",
      "start": 1713208776818,
      "end": 1713208776819,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAEzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvjI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1713208776819,
      "end": 1713208776820,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713208776819,
      "end": 1713208776820,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713208776820,
      "end": 1713208776820,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713208776820,
      "end": 1713208776820,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1713208776820,
      "end": 1713208776820,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1713208776820,
      "end": 1713208776820,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1713208776820,
      "end": 1713208776820,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1713208776820,
      "end": 1713208776820,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1713208776820,
      "end": 1713208776820,
      "order": "normal"
    }
  ]
}
