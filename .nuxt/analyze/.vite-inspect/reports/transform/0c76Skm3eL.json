{
  "resolvedId": "/home/yalnguembu/Perso/quonte/node_modules/popmotion/dist/es/easing/cubic-bezier.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { linear } from './index.mjs';\n\nconst a = (a1, a2) => 1.0 - 3.0 * a2 + 3.0 * a1;\nconst b = (a1, a2) => 3.0 * a2 - 6.0 * a1;\nconst c = (a1) => 3.0 * a1;\nconst calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\nconst getSlope = (t, a1, a2) => 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        }\n        else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nconst newtonIterations = 8;\nconst newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (let i = 0; i < newtonIterations; ++i) {\n        const currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nconst kSplineTableSize = 11;\nconst kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2)\n        return linear;\n    const sampleValues = new Float32Array(kSplineTableSize);\n    for (let i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        let intervalStart = 0.0;\n        let currentSample = 1;\n        const lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        const dist = (aX - sampleValues[currentSample]) /\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        const guessForT = intervalStart + dist * kSampleStepSize;\n        const initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope === 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n",
      "start": 1713208770945,
      "end": 1713208771003,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1713208771003,
      "end": 1713208771003,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1713208771004,
      "end": 1713208771004,
      "order": "normal"
    }
  ]
}
